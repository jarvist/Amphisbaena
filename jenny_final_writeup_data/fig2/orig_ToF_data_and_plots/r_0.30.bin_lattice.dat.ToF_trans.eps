%!PS-Adobe-2.0
%%Title: tmp.eps
%%Creator: gnuplot 4.1 patchlevel 0
%%CreationDate: Wed Sep 21 16:42:03 2005
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (tmp.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.1 patchlevel 0)
  /Author (,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Sep 21 16:42:03 2005)
  /DOCINFO pdfmark
end
} ifelse
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
% Default Line colors
/LCw { 1 1 1 } def
/LCb { 0 0 0 } def
/LCa { 0 0 0 } def
/LC0 { 1 0 0 } def
/LC1 { 0 1 0 } def
/LC2 { 0 0 1 } def
/LC3 { 1 0 1 } def
/LC4 { 0 1 1 } def
/LC5 { 1 1 0 } def
/LC6 { 0 0 0 } def
/LC7 { 1 0.3 0 } def
/LC8 { 0.5 0.5 0.5 } def
% Default Line Types
/LTw { PL [] 1 setgray } def
/LTb { BL [] LCb DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor } def
/LT0 { PL [] LC0 DL } def
/LT1 { PL [4 dl1 2 dl2] LC1 DL } def
/LT2 { PL [2 dl1 3 dl2] LC2 DL } def
/LT3 { PL [1 dl1 1.5 dl2] LC3 DL } def
/LT4 { PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL } def
/LT5 { PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL } def
/LT6 { PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL } def
/LT7 { PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL } def
/LT8 { PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor } def
/BoxColFill { gsave Rec PolyFill } def
/PolyFill {gsave Density  fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
%
% PostScript level 2 pattern fill definitions
% Ethan A Merritt April 2004
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
          bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc { 0.5 setlinewidth  pop 0 0 M 8 8 L 0 8 M 8 0 L stroke } 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc { 0.5 setlinewidth  pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
              0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke }
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc { 0.5 setlinewidth  pop 0 0 M 0 8 L
              8 8 L 8 0 L 0 0 L fill }
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc { 0.5 setlinewidth  pop -4 8 M 8 -4 L
              0 12 M 12 0 L stroke }
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc { 0.5 setlinewidth  pop -4 0 M 8 12 L
              0 -4 M 12 8 L stroke }
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc { 0.5 setlinewidth  pop -2 8 M 4 -4 L
              0 12 M 8 -4 L 4 12 M 10 0 L stroke }
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc { 0.5 setlinewidth  pop -2 0 M 4 12 L
              0 -4 M 8 12 L 4 -4 M 10 8 L stroke }
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc { 0.5 setlinewidth  pop 8 -2 M -4 4 L
              12 0 M -4 8 L 12 4 M 0 10 L stroke }
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc { 0.5 setlinewidth  pop 0 -2 M 12 4 L
              -4 0 M 12 8 L -4 4 M 8 10 L stroke }
>> matrix makepattern
/Pat9 exch def
/Pattern1 {KeepColor Pat1 setpattern} bind def
/Pattern2 {KeepColor Pat2 setpattern} bind def
/Pattern3 {KeepColor Pat3 setpattern} bind def
/Pattern4 {KeepColor Landscape { Pat5 } { Pat4 } ifelse setpattern} bind def
/Pattern5 {KeepColor Landscape { Pat4 } { Pat5 } ifelse setpattern} bind def
/Pattern6 {KeepColor Landscape { Pat9 } { Pat6 } ifelse setpattern} bind def
/Pattern7 {KeepColor Landscape { Pat8 } { Pat7 } ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
742 280 M
63 0 V
6157 0 R
-63 0 V
stroke
658 280 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 1e-06)]
] -46.7 MRshow
Blacktext { grestore } if
1.000 UL
LTb
742 467 M
31 0 V
6189 0 R
-31 0 V
742 713 M
31 0 V
6189 0 R
-31 0 V
742 840 M
31 0 V
6189 0 R
-31 0 V
742 900 M
63 0 V
6157 0 R
-63 0 V
stroke
658 900 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 1e-05)]
] -46.7 MRshow
Blacktext { grestore } if
1.000 UL
LTb
742 1087 M
31 0 V
6189 0 R
-31 0 V
742 1333 M
31 0 V
6189 0 R
-31 0 V
742 1460 M
31 0 V
6189 0 R
-31 0 V
742 1520 M
63 0 V
6157 0 R
-63 0 V
stroke
658 1520 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 1e-04)]
] -46.7 MRshow
Blacktext { grestore } if
1.000 UL
LTb
742 1707 M
31 0 V
6189 0 R
-31 0 V
742 1953 M
31 0 V
6189 0 R
-31 0 V
742 2080 M
31 0 V
6189 0 R
-31 0 V
742 2140 M
63 0 V
6157 0 R
-63 0 V
stroke
658 2140 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.001)]
] -46.7 MRshow
Blacktext { grestore } if
1.000 UL
LTb
742 2327 M
31 0 V
6189 0 R
-31 0 V
742 2573 M
31 0 V
6189 0 R
-31 0 V
742 2700 M
31 0 V
6189 0 R
-31 0 V
742 2760 M
63 0 V
6157 0 R
-63 0 V
stroke
658 2760 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.01)]
] -46.7 MRshow
Blacktext { grestore } if
1.000 UL
LTb
742 2947 M
31 0 V
6189 0 R
-31 0 V
742 3193 M
31 0 V
6189 0 R
-31 0 V
742 3320 M
31 0 V
6189 0 R
-31 0 V
742 3380 M
63 0 V
6157 0 R
-63 0 V
stroke
658 3380 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.1)]
] -46.7 MRshow
Blacktext { grestore } if
1.000 UL
LTb
742 3567 M
31 0 V
6189 0 R
-31 0 V
742 3813 M
31 0 V
6189 0 R
-31 0 V
742 3940 M
31 0 V
6189 0 R
-31 0 V
742 4000 M
63 0 V
6157 0 R
-63 0 V
stroke
658 4000 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
Blacktext { grestore } if
1.000 UL
LTb
742 4187 M
31 0 V
6189 0 R
-31 0 V
742 4433 M
31 0 V
6189 0 R
-31 0 V
742 4560 M
31 0 V
6189 0 R
-31 0 V
742 4620 M
63 0 V
6157 0 R
-63 0 V
stroke
658 4620 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MRshow
Blacktext { grestore } if
1.000 UL
LTb
742 280 M
0 63 V
0 4277 R
0 -63 V
stroke
742 140 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.01)]
] -46.7 MCshow
Blacktext { grestore } if
1.000 UL
LTb
1054 280 M
0 31 V
0 4309 R
0 -31 V
1467 280 M
0 31 V
0 4309 R
0 -31 V
1678 280 M
0 31 V
0 4309 R
0 -31 V
1779 280 M
0 63 V
0 4277 R
0 -63 V
stroke
1779 140 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.1)]
] -46.7 MCshow
Blacktext { grestore } if
1.000 UL
LTb
2091 280 M
0 31 V
0 4309 R
0 -31 V
2503 280 M
0 31 V
0 4309 R
0 -31 V
2715 280 M
0 31 V
0 4309 R
0 -31 V
2815 280 M
0 63 V
0 4277 R
0 -63 V
stroke
2815 140 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MCshow
Blacktext { grestore } if
1.000 UL
LTb
3127 280 M
0 31 V
0 4309 R
0 -31 V
3540 280 M
0 31 V
0 4309 R
0 -31 V
3752 280 M
0 31 V
0 4309 R
0 -31 V
3852 280 M
0 63 V
0 4277 R
0 -63 V
stroke
3852 140 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MCshow
Blacktext { grestore } if
1.000 UL
LTb
4164 280 M
0 31 V
0 4309 R
0 -31 V
4577 280 M
0 31 V
0 4309 R
0 -31 V
4788 280 M
0 31 V
0 4309 R
0 -31 V
4889 280 M
0 63 V
0 4277 R
0 -63 V
stroke
4889 140 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MCshow
Blacktext { grestore } if
1.000 UL
LTb
5201 280 M
0 31 V
0 4309 R
0 -31 V
5613 280 M
0 31 V
0 4309 R
0 -31 V
5825 280 M
0 31 V
0 4309 R
0 -31 V
5925 280 M
0 63 V
0 4277 R
0 -63 V
stroke
5925 140 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 1000)]
] -46.7 MCshow
Blacktext { grestore } if
1.000 UL
LTb
6237 280 M
0 31 V
0 4309 R
0 -31 V
6650 280 M
0 31 V
0 4309 R
0 -31 V
6862 280 M
0 31 V
0 4309 R
0 -31 V
6962 280 M
0 63 V
0 4277 R
0 -63 V
stroke
6962 140 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 10000)]
] -46.7 MCshow
Blacktext { grestore } if
1.000 UL
LTb
1.000 UL
LTb
742 280 M
6220 0 V
0 4340 V
-6220 0 V
742 280 L
stroke
LTb
3852 4830 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 (Datafile: r)]
[(Helvetica) 112.0 -42.0 true true 0 (0)]
[(Helvetica) 140.0 0.0 true true 0 (.30.bin)]
[(Helvetica) 112.0 -42.0 true true 0 (l)]
[(Helvetica) 140.0 0.0 true true 0 (attice.dat.ToF)]
] -32.7 MCshow
Blacktext { grestore } if
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
6311 4487 M
Blacktext { gsave 0 setgray } if
("0.01.dat" using 2:3) Rshow
Blacktext { grestore } if
LT0
6395 4487 M
399 0 V
1243 3992 M
508 -882 V
244 89 V
165 33 V
127 -47 V
105 -254 V
89 5 V
79 200 V
71 129 V
65 -136 V
60 28 V
56 26 V
52 27 V
50 -52 V
48 -78 V
45 33 V
44 83 V
42 9 V
41 -93 V
40 149 V
38 -189 V
38 56 V
37 52 V
36 -17 V
35 -71 V
35 -27 V
34 25 V
34 17 V
33 20 V
33 -34 V
32 80 V
32 -17 V
32 32 V
31 -84 V
31 83 V
31 -32 V
30 13 V
31 -37 V
30 50 V
29 -58 V
30 20 V
30 11 V
29 1 V
29 -41 V
29 41 V
29 4 V
29 -8 V
29 -8 V
28 -19 V
29 10 V
28 9 V
28 12 V
29 3 V
28 -1 V
28 11 V
28 -29 V
28 -23 V
28 20 V
28 6 V
27 14 V
28 -22 V
28 8 V
27 7 V
28 -3 V
28 -15 V
27 15 V
28 -19 V
27 32 V
28 -43 V
27 21 V
27 -12 V
28 22 V
27 -5 V
27 -5 V
28 4 V
27 0 V
27 6 V
28 -5 V
27 -6 V
27 -2 V
27 -4 V
27 12 V
28 1 V
27 2 V
27 -5 V
27 3 V
27 -11 V
27 9 V
27 6 V
27 -3 V
28 -2 V
27 -1 V
27 3 V
27 -1 V
27 2 V
27 -4 V
27 4 V
27 7 V
27 -17 V
27 10 V
27 0 V
27 -4 V
27 -1 V
stroke
5579 3140 M
27 5 V
27 -4 V
27 0 V
27 -6 V
27 3 V
27 5 V
27 -3 V
27 -2 V
27 5 V
27 -5 V
27 -3 V
27 -1 V
27 7 V
27 -2 V
27 -5 V
27 -6 V
27 -27 V
27 -64 V
27 -136 V
27 -217 V
27 -318 V
27 -392 V
27 -498 V
6227 467 L
0 -187 V
1243 3992 Pls
1751 3110 Pls
1995 3199 Pls
2160 3232 Pls
2287 3185 Pls
2392 2931 Pls
2481 2936 Pls
2560 3136 Pls
2631 3265 Pls
2696 3129 Pls
2756 3157 Pls
2812 3183 Pls
2864 3210 Pls
2914 3158 Pls
2962 3080 Pls
3007 3113 Pls
3051 3196 Pls
3093 3205 Pls
3134 3112 Pls
3174 3261 Pls
3212 3072 Pls
3250 3128 Pls
3287 3180 Pls
3323 3163 Pls
3358 3092 Pls
3393 3065 Pls
3427 3090 Pls
3461 3107 Pls
3494 3127 Pls
3527 3093 Pls
3559 3173 Pls
3591 3156 Pls
3623 3188 Pls
3654 3104 Pls
3685 3187 Pls
3716 3155 Pls
3746 3168 Pls
3777 3131 Pls
3807 3181 Pls
3836 3123 Pls
3866 3143 Pls
3896 3154 Pls
3925 3155 Pls
3954 3114 Pls
3983 3155 Pls
4012 3159 Pls
4041 3151 Pls
4070 3143 Pls
4098 3124 Pls
4127 3134 Pls
4155 3143 Pls
4183 3155 Pls
4212 3158 Pls
4240 3157 Pls
4268 3168 Pls
4296 3139 Pls
4324 3116 Pls
4352 3136 Pls
4380 3142 Pls
4407 3156 Pls
4435 3134 Pls
4463 3142 Pls
4490 3149 Pls
4518 3146 Pls
4546 3131 Pls
4573 3146 Pls
4601 3127 Pls
4628 3159 Pls
4656 3116 Pls
4683 3137 Pls
4710 3125 Pls
4738 3147 Pls
4765 3142 Pls
4792 3137 Pls
4820 3141 Pls
4847 3141 Pls
4874 3147 Pls
4902 3142 Pls
4929 3136 Pls
4956 3134 Pls
4983 3130 Pls
5010 3142 Pls
5038 3143 Pls
5065 3145 Pls
5092 3140 Pls
5119 3143 Pls
5146 3132 Pls
5173 3141 Pls
5200 3147 Pls
5227 3144 Pls
5255 3142 Pls
5282 3141 Pls
5309 3144 Pls
5336 3143 Pls
5363 3145 Pls
5390 3141 Pls
5417 3145 Pls
5444 3152 Pls
5471 3135 Pls
5498 3145 Pls
5525 3145 Pls
5552 3141 Pls
5579 3140 Pls
5606 3145 Pls
5633 3141 Pls
5660 3141 Pls
5687 3135 Pls
5714 3138 Pls
5741 3143 Pls
5768 3140 Pls
5795 3138 Pls
5822 3143 Pls
5849 3138 Pls
5876 3135 Pls
5903 3134 Pls
5930 3141 Pls
5957 3139 Pls
5984 3134 Pls
6011 3128 Pls
6038 3101 Pls
6065 3037 Pls
6092 2901 Pls
6119 2684 Pls
6146 2366 Pls
6173 1974 Pls
6200 1476 Pls
6227 467 Pls
6594 4487 Pls
1.000 UP
1.000 UL
LT1
LTb
6311 4347 M
Blacktext { gsave 0 setgray } if
("0.05.dat" using 2:3) Rshow
Blacktext { grestore } if
LT1
6395 4347 M
399 0 V
-5551 30 R
508 -833 V
244 29 V
165 -25 V
127 13 V
105 -13 V
89 1 V
79 -13 V
71 4 V
65 15 V
60 -33 V
56 22 V
52 -6 V
50 -35 V
48 42 V
45 3 V
44 -11 V
42 2 V
41 -18 V
40 -2 V
38 -1 V
38 11 V
37 -21 V
36 5 V
35 -13 V
35 13 V
34 15 V
34 -17 V
33 12 V
33 0 V
32 3 V
32 -35 V
32 12 V
31 4 V
31 11 V
31 -27 V
30 1 V
31 9 V
30 2 V
29 -4 V
30 -5 V
30 8 V
29 0 V
29 10 V
29 -2 V
29 0 V
29 -13 V
29 8 V
28 -15 V
29 7 V
28 -1 V
28 -1 V
29 6 V
28 -5 V
28 -3 V
28 2 V
28 -4 V
28 2 V
28 -9 V
27 7 V
28 2 V
28 -1 V
27 5 V
28 3 V
28 -2 V
27 -6 V
28 3 V
27 1 V
28 4 V
27 -1 V
27 5 V
28 -2 V
27 -1 V
27 5 V
28 -7 V
27 2 V
27 -1 V
28 -4 V
27 8 V
27 0 V
27 -8 V
27 1 V
28 1 V
27 -4 V
27 -4 V
27 -2 V
27 -7 V
27 5 V
27 -7 V
27 -2 V
28 -1 V
27 -8 V
27 0 V
27 6 V
27 -2 V
27 2 V
27 -13 V
27 -42 V
27 -71 V
27 -101 V
27 -114 V
27 -132 V
27 -156 V
stroke
5579 2845 M
27 -105 V
27 -136 V
27 -68 V
27 -70 V
27 -129 V
27 -57 V
27 -120 V
27 -156 V
27 13 V
27 -138 V
27 -28 V
27 32 V
27 -109 V
27 18 V
27 -81 V
27 -85 V
27 -83 V
27 -298 V
27 -187 V
27 333 V
27 -69 V
6200 280 M
135 0 R
27 1124 V
27 53 V
27 -98 V
27 49 V
0 -1128 V
54 0 R
0 965 V
0 -965 V
135 0 R
0 957 V
27 36 V
27 -215 V
27 259 V
0 -1037 V
1243 4377 Crs
1751 3544 Crs
1995 3573 Crs
2160 3548 Crs
2287 3561 Crs
2392 3548 Crs
2481 3549 Crs
2560 3536 Crs
2631 3540 Crs
2696 3555 Crs
2756 3522 Crs
2812 3544 Crs
2864 3538 Crs
2914 3503 Crs
2962 3545 Crs
3007 3548 Crs
3051 3537 Crs
3093 3539 Crs
3134 3521 Crs
3174 3519 Crs
3212 3518 Crs
3250 3529 Crs
3287 3508 Crs
3323 3513 Crs
3358 3500 Crs
3393 3513 Crs
3427 3528 Crs
3461 3511 Crs
3494 3523 Crs
3527 3523 Crs
3559 3526 Crs
3591 3491 Crs
3623 3503 Crs
3654 3507 Crs
3685 3518 Crs
3716 3491 Crs
3746 3492 Crs
3777 3501 Crs
3807 3503 Crs
3836 3499 Crs
3866 3494 Crs
3896 3502 Crs
3925 3502 Crs
3954 3512 Crs
3983 3510 Crs
4012 3510 Crs
4041 3497 Crs
4070 3505 Crs
4098 3490 Crs
4127 3497 Crs
4155 3496 Crs
4183 3495 Crs
4212 3501 Crs
4240 3496 Crs
4268 3493 Crs
4296 3495 Crs
4324 3491 Crs
4352 3493 Crs
4380 3484 Crs
4407 3491 Crs
4435 3493 Crs
4463 3492 Crs
4490 3497 Crs
4518 3500 Crs
4546 3498 Crs
4573 3492 Crs
4601 3495 Crs
4628 3496 Crs
4656 3500 Crs
4683 3499 Crs
4710 3504 Crs
4738 3502 Crs
4765 3501 Crs
4792 3506 Crs
4820 3499 Crs
4847 3501 Crs
4874 3500 Crs
4902 3496 Crs
4929 3504 Crs
4956 3504 Crs
4983 3496 Crs
5010 3497 Crs
5038 3498 Crs
5065 3494 Crs
5092 3490 Crs
5119 3488 Crs
5146 3481 Crs
5173 3486 Crs
5200 3479 Crs
5227 3477 Crs
5255 3476 Crs
5282 3468 Crs
5309 3468 Crs
5336 3474 Crs
5363 3472 Crs
5390 3474 Crs
5417 3461 Crs
5444 3419 Crs
5471 3348 Crs
5498 3247 Crs
5525 3133 Crs
5552 3001 Crs
5579 2845 Crs
5606 2740 Crs
5633 2604 Crs
5660 2536 Crs
5687 2466 Crs
5714 2337 Crs
5741 2280 Crs
5768 2160 Crs
5795 2004 Crs
5822 2017 Crs
5849 1879 Crs
5876 1851 Crs
5903 1883 Crs
5930 1774 Crs
5957 1792 Crs
5984 1711 Crs
6011 1626 Crs
6038 1543 Crs
6065 1245 Crs
6092 1058 Crs
6119 1391 Crs
6146 1322 Crs
6200 280 Crs
6335 280 Crs
6362 1404 Crs
6389 1457 Crs
6416 1359 Crs
6443 1408 Crs
6497 1245 Crs
6632 1237 Crs
6659 1273 Crs
6686 1058 Crs
6713 1317 Crs
6594 4347 Crs
1.000 UP
1.000 UL
LT2
LTb
6311 4207 M
Blacktext { gsave 0 setgray } if
("0.1.dat" using 2:3) Rshow
Blacktext { grestore } if
LT2
6395 4207 M
399 0 V
1243 4544 M
508 -834 V
244 -18 V
165 13 V
127 -6 V
105 16 V
89 -16 V
79 18 V
71 -7 V
65 -7 V
60 11 V
56 -8 V
52 -2 V
50 -13 V
48 12 V
45 -22 V
44 -2 V
42 7 V
41 5 V
40 0 V
38 -4 V
38 -9 V
37 -1 V
36 4 V
35 -10 V
35 -1 V
34 2 V
34 2 V
33 -11 V
33 5 V
32 -1 V
32 -6 V
32 1 V
31 2 V
31 1 V
31 -7 V
30 -15 V
31 -5 V
30 19 V
29 -9 V
30 1 V
30 -2 V
29 -7 V
29 8 V
29 -4 V
29 0 V
29 3 V
29 -6 V
28 1 V
29 -10 V
28 4 V
28 -4 V
29 3 V
28 1 V
28 -10 V
28 12 V
28 -12 V
28 12 V
28 -3 V
27 -11 V
28 14 V
28 -5 V
27 -11 V
28 9 V
28 -1 V
27 -11 V
28 9 V
27 -3 V
28 -4 V
27 -6 V
27 2 V
28 -7 V
27 -12 V
27 3 V
28 -13 V
27 0 V
27 -2 V
28 -6 V
27 -6 V
27 -7 V
27 -2 V
27 -3 V
28 1 V
27 -4 V
27 -15 V
27 -7 V
27 -6 V
27 -25 V
27 -21 V
27 -43 V
28 -49 V
27 -59 V
27 -47 V
27 -71 V
27 -54 V
27 -62 V
27 -43 V
27 -67 V
27 -61 V
27 -19 V
27 -63 V
27 -81 V
27 -81 V
stroke
5579 2685 M
27 -53 V
27 18 V
27 -30 V
27 -56 V
27 -74 V
27 -35 V
27 -71 V
27 -39 V
27 -69 V
27 -20 V
27 -19 V
27 57 V
27 45 V
27 -225 V
27 -48 V
27 128 V
27 -49 V
27 46 V
27 -78 V
27 -244 V
27 -47 V
27 -233 V
27 237 V
27 73 V
27 70 V
27 -92 V
27 -225 V
27 25 V
27 212 V
27 18 V
27 -266 V
27 185 V
27 -248 V
0 -1298 V
54 0 R
0 1187 V
27 126 V
27 -584 V
27 204 V
27 263 V
27 -9 V
27 -254 V
27 260 V
27 -337 V
27 364 V
27 -551 V
27 22 V
27 176 V
1243 4544 Star
1751 3710 Star
1995 3692 Star
2160 3705 Star
2287 3699 Star
2392 3715 Star
2481 3699 Star
2560 3717 Star
2631 3710 Star
2696 3703 Star
2756 3714 Star
2812 3706 Star
2864 3704 Star
2914 3691 Star
2962 3703 Star
3007 3681 Star
3051 3679 Star
3093 3686 Star
3134 3691 Star
3174 3691 Star
3212 3687 Star
3250 3678 Star
3287 3677 Star
3323 3681 Star
3358 3671 Star
3393 3670 Star
3427 3672 Star
3461 3674 Star
3494 3663 Star
3527 3668 Star
3559 3667 Star
3591 3661 Star
3623 3662 Star
3654 3664 Star
3685 3665 Star
3716 3658 Star
3746 3643 Star
3777 3638 Star
3807 3657 Star
3836 3648 Star
3866 3649 Star
3896 3647 Star
3925 3640 Star
3954 3648 Star
3983 3644 Star
4012 3644 Star
4041 3647 Star
4070 3641 Star
4098 3642 Star
4127 3632 Star
4155 3636 Star
4183 3632 Star
4212 3635 Star
4240 3636 Star
4268 3626 Star
4296 3638 Star
4324 3626 Star
4352 3638 Star
4380 3635 Star
4407 3624 Star
4435 3638 Star
4463 3633 Star
4490 3622 Star
4518 3631 Star
4546 3630 Star
4573 3619 Star
4601 3628 Star
4628 3625 Star
4656 3621 Star
4683 3615 Star
4710 3617 Star
4738 3610 Star
4765 3598 Star
4792 3601 Star
4820 3588 Star
4847 3588 Star
4874 3586 Star
4902 3580 Star
4929 3574 Star
4956 3567 Star
4983 3565 Star
5010 3562 Star
5038 3563 Star
5065 3559 Star
5092 3544 Star
5119 3537 Star
5146 3531 Star
5173 3506 Star
5200 3485 Star
5227 3442 Star
5255 3393 Star
5282 3334 Star
5309 3287 Star
5336 3216 Star
5363 3162 Star
5390 3100 Star
5417 3057 Star
5444 2990 Star
5471 2929 Star
5498 2910 Star
5525 2847 Star
5552 2766 Star
5579 2685 Star
5606 2632 Star
5633 2650 Star
5660 2620 Star
5687 2564 Star
5714 2490 Star
5741 2455 Star
5768 2384 Star
5795 2345 Star
5822 2276 Star
5849 2256 Star
5876 2237 Star
5903 2294 Star
5930 2339 Star
5957 2114 Star
5984 2066 Star
6011 2194 Star
6038 2145 Star
6065 2191 Star
6092 2113 Star
6119 1869 Star
6146 1822 Star
6173 1589 Star
6200 1826 Star
6227 1899 Star
6254 1969 Star
6281 1877 Star
6308 1652 Star
6335 1677 Star
6362 1889 Star
6389 1907 Star
6416 1641 Star
6443 1826 Star
6470 1578 Star
6524 1467 Star
6551 1593 Star
6578 1009 Star
6605 1213 Star
6632 1476 Star
6659 1467 Star
6686 1213 Star
6713 1473 Star
6740 1136 Star
6767 1500 Star
6794 949 Star
6821 971 Star
6848 1147 Star
6594 4207 Star
1.000 UL
LTb
742 280 M
6220 0 V
0 4340 V
-6220 0 V
742 280 L
1.000 UP
stroke
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
