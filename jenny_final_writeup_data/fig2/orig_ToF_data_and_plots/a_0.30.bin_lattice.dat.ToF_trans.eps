%!PS-Adobe-2.0
%%Title: tmp.eps
%%Creator: gnuplot 4.1 patchlevel 0
%%CreationDate: Wed Sep 21 16:42:02 2005
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (tmp.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.1 patchlevel 0)
  /Author (,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Sep 21 16:42:02 2005)
  /DOCINFO pdfmark
end
} ifelse
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
% Default Line colors
/LCw { 1 1 1 } def
/LCb { 0 0 0 } def
/LCa { 0 0 0 } def
/LC0 { 1 0 0 } def
/LC1 { 0 1 0 } def
/LC2 { 0 0 1 } def
/LC3 { 1 0 1 } def
/LC4 { 0 1 1 } def
/LC5 { 1 1 0 } def
/LC6 { 0 0 0 } def
/LC7 { 1 0.3 0 } def
/LC8 { 0.5 0.5 0.5 } def
% Default Line Types
/LTw { PL [] 1 setgray } def
/LTb { BL [] LCb DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor } def
/LT0 { PL [] LC0 DL } def
/LT1 { PL [4 dl1 2 dl2] LC1 DL } def
/LT2 { PL [2 dl1 3 dl2] LC2 DL } def
/LT3 { PL [1 dl1 1.5 dl2] LC3 DL } def
/LT4 { PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL } def
/LT5 { PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL } def
/LT6 { PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL } def
/LT7 { PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL } def
/LT8 { PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor } def
/BoxColFill { gsave Rec PolyFill } def
/PolyFill {gsave Density  fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
%
% PostScript level 2 pattern fill definitions
% Ethan A Merritt April 2004
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
          bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc { 0.5 setlinewidth  pop 0 0 M 8 8 L 0 8 M 8 0 L stroke } 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc { 0.5 setlinewidth  pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
              0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke }
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc { 0.5 setlinewidth  pop 0 0 M 0 8 L
              8 8 L 8 0 L 0 0 L fill }
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc { 0.5 setlinewidth  pop -4 8 M 8 -4 L
              0 12 M 12 0 L stroke }
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc { 0.5 setlinewidth  pop -4 0 M 8 12 L
              0 -4 M 12 8 L stroke }
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc { 0.5 setlinewidth  pop -2 8 M 4 -4 L
              0 12 M 8 -4 L 4 12 M 10 0 L stroke }
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc { 0.5 setlinewidth  pop -2 0 M 4 12 L
              0 -4 M 8 12 L 4 -4 M 10 8 L stroke }
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc { 0.5 setlinewidth  pop 8 -2 M -4 4 L
              12 0 M -4 8 L 12 4 M 0 10 L stroke }
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc { 0.5 setlinewidth  pop 0 -2 M 12 4 L
              -4 0 M 12 8 L -4 4 M 8 10 L stroke }
>> matrix makepattern
/Pat9 exch def
/Pattern1 {KeepColor Pat1 setpattern} bind def
/Pattern2 {KeepColor Pat2 setpattern} bind def
/Pattern3 {KeepColor Pat3 setpattern} bind def
/Pattern4 {KeepColor Landscape { Pat5 } { Pat4 } ifelse setpattern} bind def
/Pattern5 {KeepColor Landscape { Pat4 } { Pat5 } ifelse setpattern} bind def
/Pattern6 {KeepColor Landscape { Pat9 } { Pat6 } ifelse setpattern} bind def
/Pattern7 {KeepColor Landscape { Pat8 } { Pat7 } ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
742 280 M
63 0 V
6157 0 R
-63 0 V
stroke
658 280 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 1e-05)]
] -46.7 MRshow
Blacktext { grestore } if
1.000 UL
LTb
742 467 M
31 0 V
6189 0 R
-31 0 V
742 713 M
31 0 V
6189 0 R
-31 0 V
742 840 M
31 0 V
6189 0 R
-31 0 V
742 900 M
63 0 V
6157 0 R
-63 0 V
stroke
658 900 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 1e-04)]
] -46.7 MRshow
Blacktext { grestore } if
1.000 UL
LTb
742 1087 M
31 0 V
6189 0 R
-31 0 V
742 1333 M
31 0 V
6189 0 R
-31 0 V
742 1460 M
31 0 V
6189 0 R
-31 0 V
742 1520 M
63 0 V
6157 0 R
-63 0 V
stroke
658 1520 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.001)]
] -46.7 MRshow
Blacktext { grestore } if
1.000 UL
LTb
742 1707 M
31 0 V
6189 0 R
-31 0 V
742 1953 M
31 0 V
6189 0 R
-31 0 V
742 2080 M
31 0 V
6189 0 R
-31 0 V
742 2140 M
63 0 V
6157 0 R
-63 0 V
stroke
658 2140 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.01)]
] -46.7 MRshow
Blacktext { grestore } if
1.000 UL
LTb
742 2327 M
31 0 V
6189 0 R
-31 0 V
742 2573 M
31 0 V
6189 0 R
-31 0 V
742 2700 M
31 0 V
6189 0 R
-31 0 V
742 2760 M
63 0 V
6157 0 R
-63 0 V
stroke
658 2760 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.1)]
] -46.7 MRshow
Blacktext { grestore } if
1.000 UL
LTb
742 2947 M
31 0 V
6189 0 R
-31 0 V
742 3193 M
31 0 V
6189 0 R
-31 0 V
742 3320 M
31 0 V
6189 0 R
-31 0 V
742 3380 M
63 0 V
6157 0 R
-63 0 V
stroke
658 3380 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
Blacktext { grestore } if
1.000 UL
LTb
742 3567 M
31 0 V
6189 0 R
-31 0 V
742 3813 M
31 0 V
6189 0 R
-31 0 V
742 3940 M
31 0 V
6189 0 R
-31 0 V
742 4000 M
63 0 V
6157 0 R
-63 0 V
stroke
658 4000 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MRshow
Blacktext { grestore } if
1.000 UL
LTb
742 4187 M
31 0 V
6189 0 R
-31 0 V
742 4433 M
31 0 V
6189 0 R
-31 0 V
742 4560 M
31 0 V
6189 0 R
-31 0 V
742 4620 M
63 0 V
6157 0 R
-63 0 V
stroke
658 4620 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MRshow
Blacktext { grestore } if
1.000 UL
LTb
742 280 M
0 63 V
0 4277 R
0 -63 V
stroke
742 140 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.01)]
] -46.7 MCshow
Blacktext { grestore } if
1.000 UL
LTb
1054 280 M
0 31 V
0 4309 R
0 -31 V
1467 280 M
0 31 V
0 4309 R
0 -31 V
1678 280 M
0 31 V
0 4309 R
0 -31 V
1779 280 M
0 63 V
0 4277 R
0 -63 V
stroke
1779 140 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.1)]
] -46.7 MCshow
Blacktext { grestore } if
1.000 UL
LTb
2091 280 M
0 31 V
0 4309 R
0 -31 V
2503 280 M
0 31 V
0 4309 R
0 -31 V
2715 280 M
0 31 V
0 4309 R
0 -31 V
2815 280 M
0 63 V
0 4277 R
0 -63 V
stroke
2815 140 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MCshow
Blacktext { grestore } if
1.000 UL
LTb
3127 280 M
0 31 V
0 4309 R
0 -31 V
3540 280 M
0 31 V
0 4309 R
0 -31 V
3752 280 M
0 31 V
0 4309 R
0 -31 V
3852 280 M
0 63 V
0 4277 R
0 -63 V
stroke
3852 140 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MCshow
Blacktext { grestore } if
1.000 UL
LTb
4164 280 M
0 31 V
0 4309 R
0 -31 V
4577 280 M
0 31 V
0 4309 R
0 -31 V
4788 280 M
0 31 V
0 4309 R
0 -31 V
4889 280 M
0 63 V
0 4277 R
0 -63 V
stroke
4889 140 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MCshow
Blacktext { grestore } if
1.000 UL
LTb
5201 280 M
0 31 V
0 4309 R
0 -31 V
5613 280 M
0 31 V
0 4309 R
0 -31 V
5825 280 M
0 31 V
0 4309 R
0 -31 V
5925 280 M
0 63 V
0 4277 R
0 -63 V
stroke
5925 140 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 1000)]
] -46.7 MCshow
Blacktext { grestore } if
1.000 UL
LTb
6237 280 M
0 31 V
0 4309 R
0 -31 V
6650 280 M
0 31 V
0 4309 R
0 -31 V
6862 280 M
0 31 V
0 4309 R
0 -31 V
6962 280 M
0 63 V
0 4277 R
0 -63 V
stroke
6962 140 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 10000)]
] -46.7 MCshow
Blacktext { grestore } if
1.000 UL
LTb
1.000 UL
LTb
742 280 M
6220 0 V
0 4340 V
-6220 0 V
742 280 L
stroke
LTb
3852 4830 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 (Datafile: a)]
[(Helvetica) 112.0 -42.0 true true 0 (0)]
[(Helvetica) 140.0 0.0 true true 0 (.30.bin)]
[(Helvetica) 112.0 -42.0 true true 0 (l)]
[(Helvetica) 140.0 0.0 true true 0 (attice.dat.ToF)]
] -32.7 MCshow
Blacktext { grestore } if
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
6311 4487 M
Blacktext { gsave 0 setgray } if
("0.01.dat" using 2:3) Rshow
Blacktext { grestore } if
LT0
6395 4487 M
399 0 V
1243 3616 M
508 -828 V
244 -38 V
165 4 V
127 -20 V
105 109 V
89 -143 V
79 74 V
71 -8 V
65 -27 V
60 18 V
56 8 V
52 -46 V
50 -20 V
48 -25 V
45 43 V
44 -1 V
42 -29 V
41 60 V
40 -24 V
38 -28 V
38 37 V
37 -64 V
36 63 V
35 -129 V
35 14 V
34 85 V
34 -67 V
33 20 V
33 -54 V
32 -19 V
32 65 V
32 -6 V
31 13 V
31 25 V
31 -116 V
30 73 V
31 -19 V
30 12 V
29 2 V
30 -13 V
30 18 V
29 -9 V
29 -9 V
29 -34 V
29 15 V
29 -5 V
29 7 V
28 4 V
29 -63 V
28 35 V
28 -27 V
29 -8 V
28 -29 V
28 15 V
28 38 V
28 -28 V
28 -22 V
28 -4 V
27 26 V
28 7 V
28 -64 V
27 13 V
28 -32 V
28 48 V
27 -4 V
28 -18 V
27 -32 V
28 5 V
27 -19 V
27 1 V
28 20 V
27 15 V
27 -40 V
28 -35 V
27 21 V
27 -6 V
28 21 V
27 -19 V
27 -16 V
27 6 V
27 -33 V
28 34 V
27 -17 V
27 -26 V
27 34 V
27 -15 V
27 -4 V
27 -21 V
27 6 V
28 -23 V
27 26 V
27 -17 V
27 -16 V
27 8 V
27 -41 V
27 4 V
27 -3 V
27 0 V
27 18 V
27 -20 V
27 -17 V
27 -12 V
stroke
5579 2274 M
27 4 V
27 -9 V
27 15 V
27 10 V
27 5 V
27 -11 V
27 -7 V
27 -1 V
27 3 V
27 -8 V
27 21 V
27 -31 V
27 -2 V
27 16 V
27 5 V
27 -10 V
27 -1 V
27 -13 V
27 -12 V
27 -24 V
27 19 V
27 -26 V
27 -28 V
27 -23 V
27 -5 V
27 -46 V
27 -8 V
27 -12 V
27 -47 V
27 -39 V
27 -26 V
27 -58 V
27 -8 V
27 -51 V
27 -52 V
27 -29 V
27 -8 V
27 -48 V
27 -41 V
27 -33 V
27 -32 V
27 -56 V
27 -39 V
27 4 V
27 -88 V
27 -27 V
27 16 V
1243 3616 Pls
1751 2788 Pls
1995 2750 Pls
2160 2754 Pls
2287 2734 Pls
2392 2843 Pls
2481 2700 Pls
2560 2774 Pls
2631 2766 Pls
2696 2739 Pls
2756 2757 Pls
2812 2765 Pls
2864 2719 Pls
2914 2699 Pls
2962 2674 Pls
3007 2717 Pls
3051 2716 Pls
3093 2687 Pls
3134 2747 Pls
3174 2723 Pls
3212 2695 Pls
3250 2732 Pls
3287 2668 Pls
3323 2731 Pls
3358 2602 Pls
3393 2616 Pls
3427 2701 Pls
3461 2634 Pls
3494 2654 Pls
3527 2600 Pls
3559 2581 Pls
3591 2646 Pls
3623 2640 Pls
3654 2653 Pls
3685 2678 Pls
3716 2562 Pls
3746 2635 Pls
3777 2616 Pls
3807 2628 Pls
3836 2630 Pls
3866 2617 Pls
3896 2635 Pls
3925 2626 Pls
3954 2617 Pls
3983 2583 Pls
4012 2598 Pls
4041 2593 Pls
4070 2600 Pls
4098 2604 Pls
4127 2541 Pls
4155 2576 Pls
4183 2549 Pls
4212 2541 Pls
4240 2512 Pls
4268 2527 Pls
4296 2565 Pls
4324 2537 Pls
4352 2515 Pls
4380 2511 Pls
4407 2537 Pls
4435 2544 Pls
4463 2480 Pls
4490 2493 Pls
4518 2461 Pls
4546 2509 Pls
4573 2505 Pls
4601 2487 Pls
4628 2455 Pls
4656 2460 Pls
4683 2441 Pls
4710 2442 Pls
4738 2462 Pls
4765 2477 Pls
4792 2437 Pls
4820 2402 Pls
4847 2423 Pls
4874 2417 Pls
4902 2438 Pls
4929 2419 Pls
4956 2403 Pls
4983 2409 Pls
5010 2376 Pls
5038 2410 Pls
5065 2393 Pls
5092 2367 Pls
5119 2401 Pls
5146 2386 Pls
5173 2382 Pls
5200 2361 Pls
5227 2367 Pls
5255 2344 Pls
5282 2370 Pls
5309 2353 Pls
5336 2337 Pls
5363 2345 Pls
5390 2304 Pls
5417 2308 Pls
5444 2305 Pls
5471 2305 Pls
5498 2323 Pls
5525 2303 Pls
5552 2286 Pls
5579 2274 Pls
5606 2278 Pls
5633 2269 Pls
5660 2284 Pls
5687 2294 Pls
5714 2299 Pls
5741 2288 Pls
5768 2281 Pls
5795 2280 Pls
5822 2283 Pls
5849 2275 Pls
5876 2296 Pls
5903 2265 Pls
5930 2263 Pls
5957 2279 Pls
5984 2284 Pls
6011 2274 Pls
6038 2273 Pls
6065 2260 Pls
6092 2248 Pls
6119 2224 Pls
6146 2243 Pls
6173 2217 Pls
6200 2189 Pls
6227 2166 Pls
6254 2161 Pls
6281 2115 Pls
6308 2107 Pls
6335 2095 Pls
6362 2048 Pls
6389 2009 Pls
6416 1983 Pls
6443 1925 Pls
6470 1917 Pls
6497 1866 Pls
6524 1814 Pls
6551 1785 Pls
6578 1777 Pls
6605 1729 Pls
6632 1688 Pls
6659 1655 Pls
6686 1623 Pls
6713 1567 Pls
6740 1528 Pls
6767 1532 Pls
6794 1444 Pls
6821 1417 Pls
6848 1433 Pls
6594 4487 Pls
1.000 UP
1.000 UL
LT1
LTb
6311 4347 M
Blacktext { gsave 0 setgray } if
("0.05.dat" using 2:3) Rshow
Blacktext { grestore } if
LT1
6395 4347 M
399 0 V
1243 3979 M
508 -886 V
244 -11 V
165 -7 V
127 -26 V
105 -13 V
89 7 V
79 -28 V
71 -16 V
65 22 V
60 -20 V
56 -29 V
52 15 V
50 3 V
48 2 V
45 -25 V
44 -16 V
42 19 V
41 -21 V
40 -15 V
38 -13 V
38 43 V
37 -34 V
36 -13 V
35 -21 V
35 -5 V
34 -9 V
34 -63 V
33 44 V
33 -33 V
32 -11 V
32 -34 V
32 -17 V
31 -8 V
31 30 V
31 -17 V
30 -33 V
31 -26 V
30 20 V
29 22 V
30 -5 V
30 -18 V
29 -39 V
29 -32 V
29 -18 V
29 13 V
29 -46 V
29 -5 V
28 -3 V
29 -27 V
28 -16 V
28 -1 V
29 -27 V
28 -29 V
28 16 V
28 -46 V
28 1 V
28 -36 V
28 -8 V
27 -35 V
28 13 V
28 -69 V
27 24 V
28 -21 V
28 20 V
27 -42 V
28 20 V
27 -77 V
28 53 V
27 -66 V
27 -38 V
28 49 V
27 -42 V
27 -16 V
28 5 V
27 -47 V
27 -35 V
28 -1 V
27 -36 V
27 -4 V
27 -54 V
27 7 V
28 39 V
27 -33 V
27 -52 V
27 9 V
27 -5 V
27 -74 V
27 1 V
27 -76 V
28 112 V
27 -130 V
27 73 V
27 -66 V
27 -63 V
27 31 V
27 59 V
27 -101 V
27 40 V
27 -65 V
27 -36 V
27 -96 V
27 50 V
stroke
5579 1655 M
27 21 V
27 -20 V
27 -28 V
27 37 V
27 44 V
27 -64 V
27 0 V
27 -130 V
27 107 V
27 -104 V
27 52 V
27 -169 V
27 -103 V
27 188 V
27 44 V
27 -61 V
27 -63 V
27 17 V
27 -105 V
27 -5 V
27 38 V
27 -34 V
27 62 V
27 -43 V
27 26 V
27 -119 V
27 40 V
27 10 V
27 -58 V
27 5 V
27 24 V
27 -147 V
27 -5 V
27 124 V
27 46 V
27 -212 V
27 -15 V
27 65 V
27 -171 V
27 60 V
27 -11 V
27 63 V
27 -172 V
27 141 V
27 -59 V
27 -15 V
27 -11 V
1243 3979 Crs
1751 3093 Crs
1995 3082 Crs
2160 3075 Crs
2287 3049 Crs
2392 3036 Crs
2481 3043 Crs
2560 3015 Crs
2631 2999 Crs
2696 3021 Crs
2756 3001 Crs
2812 2972 Crs
2864 2987 Crs
2914 2990 Crs
2962 2992 Crs
3007 2967 Crs
3051 2951 Crs
3093 2970 Crs
3134 2949 Crs
3174 2934 Crs
3212 2921 Crs
3250 2964 Crs
3287 2930 Crs
3323 2917 Crs
3358 2896 Crs
3393 2891 Crs
3427 2882 Crs
3461 2819 Crs
3494 2863 Crs
3527 2830 Crs
3559 2819 Crs
3591 2785 Crs
3623 2768 Crs
3654 2760 Crs
3685 2790 Crs
3716 2773 Crs
3746 2740 Crs
3777 2714 Crs
3807 2734 Crs
3836 2756 Crs
3866 2751 Crs
3896 2733 Crs
3925 2694 Crs
3954 2662 Crs
3983 2644 Crs
4012 2657 Crs
4041 2611 Crs
4070 2606 Crs
4098 2603 Crs
4127 2576 Crs
4155 2560 Crs
4183 2559 Crs
4212 2532 Crs
4240 2503 Crs
4268 2519 Crs
4296 2473 Crs
4324 2474 Crs
4352 2438 Crs
4380 2430 Crs
4407 2395 Crs
4435 2408 Crs
4463 2339 Crs
4490 2363 Crs
4518 2342 Crs
4546 2362 Crs
4573 2320 Crs
4601 2340 Crs
4628 2263 Crs
4656 2316 Crs
4683 2250 Crs
4710 2212 Crs
4738 2261 Crs
4765 2219 Crs
4792 2203 Crs
4820 2208 Crs
4847 2161 Crs
4874 2126 Crs
4902 2125 Crs
4929 2089 Crs
4956 2085 Crs
4983 2031 Crs
5010 2038 Crs
5038 2077 Crs
5065 2044 Crs
5092 1992 Crs
5119 2001 Crs
5146 1996 Crs
5173 1922 Crs
5200 1923 Crs
5227 1847 Crs
5255 1959 Crs
5282 1829 Crs
5309 1902 Crs
5336 1836 Crs
5363 1773 Crs
5390 1804 Crs
5417 1863 Crs
5444 1762 Crs
5471 1802 Crs
5498 1737 Crs
5525 1701 Crs
5552 1605 Crs
5579 1655 Crs
5606 1676 Crs
5633 1656 Crs
5660 1628 Crs
5687 1665 Crs
5714 1709 Crs
5741 1645 Crs
5768 1645 Crs
5795 1515 Crs
5822 1622 Crs
5849 1518 Crs
5876 1570 Crs
5903 1401 Crs
5930 1298 Crs
5957 1486 Crs
5984 1530 Crs
6011 1469 Crs
6038 1406 Crs
6065 1423 Crs
6092 1318 Crs
6119 1313 Crs
6146 1351 Crs
6173 1317 Crs
6200 1379 Crs
6227 1336 Crs
6254 1362 Crs
6281 1243 Crs
6308 1283 Crs
6335 1293 Crs
6362 1235 Crs
6389 1240 Crs
6416 1264 Crs
6443 1117 Crs
6470 1112 Crs
6497 1236 Crs
6524 1282 Crs
6551 1070 Crs
6578 1055 Crs
6605 1120 Crs
6632 949 Crs
6659 1009 Crs
6686 998 Crs
6713 1061 Crs
6740 889 Crs
6767 1030 Crs
6794 971 Crs
6821 956 Crs
6848 945 Crs
6594 4347 Crs
1.000 UP
1.000 UL
LT2
LTb
6311 4207 M
Blacktext { gsave 0 setgray } if
("0.1.dat" using 2:3) Rshow
Blacktext { grestore } if
LT2
6395 4207 M
399 0 V
1243 4073 M
508 -929 V
244 -18 V
165 2 V
127 -15 V
105 -25 V
89 -14 V
79 -17 V
71 9 V
65 -6 V
60 -13 V
56 -16 V
52 -14 V
50 -4 V
48 -27 V
45 -24 V
44 2 V
42 -12 V
41 -21 V
40 11 V
38 -31 V
38 -5 V
37 11 V
36 -46 V
35 -17 V
35 -24 V
34 1 V
34 -62 V
33 -29 V
33 35 V
32 -29 V
32 -20 V
32 9 V
31 11 V
31 -4 V
31 -3 V
30 -25 V
31 -31 V
30 36 V
29 -37 V
30 -15 V
30 -48 V
29 13 V
29 -23 V
29 -16 V
29 -51 V
29 13 V
29 -47 V
28 -49 V
29 23 V
28 4 V
28 -9 V
29 -34 V
28 -7 V
28 -22 V
28 -9 V
28 7 V
28 -24 V
28 5 V
27 -5 V
28 -76 V
28 -3 V
27 -11 V
28 -12 V
28 -18 V
27 -7 V
28 -40 V
27 28 V
28 -54 V
27 -37 V
27 -25 V
28 18 V
27 -87 V
27 -19 V
28 -43 V
27 -34 V
27 -82 V
28 81 V
27 -14 V
27 -40 V
27 -3 V
27 4 V
28 -89 V
27 0 V
27 -103 V
27 46 V
27 9 V
27 35 V
27 -44 V
27 -13 V
28 -4 V
27 -71 V
27 -20 V
27 -25 V
27 -75 V
27 135 V
27 -88 V
27 17 V
27 -45 V
27 12 V
27 -121 V
27 -77 V
27 69 V
stroke
5579 1462 M
27 -76 V
27 -48 V
27 117 V
27 -67 V
27 -27 V
27 75 V
27 -106 V
27 -55 V
27 -38 V
27 104 V
27 -116 V
27 23 V
27 122 V
27 -219 V
27 31 V
27 63 V
27 50 V
27 -173 V
27 -42 V
27 55 V
27 -35 V
27 -93 V
27 -157 V
27 182 V
27 -19 V
27 130 V
27 -194 V
27 149 V
27 -187 V
27 -111 V
27 56 V
27 127 V
27 -120 V
27 -51 V
27 -28 V
27 -31 V
27 160 V
27 -267 V
27 243 V
27 -304 V
27 295 V
27 -104 V
27 32 V
27 -69 V
27 -42 V
27 74 V
27 -47 V
1243 4073 Star
1751 3144 Star
1995 3126 Star
2160 3128 Star
2287 3113 Star
2392 3088 Star
2481 3074 Star
2560 3057 Star
2631 3066 Star
2696 3060 Star
2756 3047 Star
2812 3031 Star
2864 3017 Star
2914 3013 Star
2962 2986 Star
3007 2962 Star
3051 2964 Star
3093 2952 Star
3134 2931 Star
3174 2942 Star
3212 2911 Star
3250 2906 Star
3287 2917 Star
3323 2871 Star
3358 2854 Star
3393 2830 Star
3427 2831 Star
3461 2769 Star
3494 2740 Star
3527 2775 Star
3559 2746 Star
3591 2726 Star
3623 2735 Star
3654 2746 Star
3685 2742 Star
3716 2739 Star
3746 2714 Star
3777 2683 Star
3807 2719 Star
3836 2682 Star
3866 2667 Star
3896 2619 Star
3925 2632 Star
3954 2609 Star
3983 2593 Star
4012 2542 Star
4041 2555 Star
4070 2508 Star
4098 2459 Star
4127 2482 Star
4155 2486 Star
4183 2477 Star
4212 2443 Star
4240 2436 Star
4268 2414 Star
4296 2405 Star
4324 2412 Star
4352 2388 Star
4380 2393 Star
4407 2388 Star
4435 2312 Star
4463 2309 Star
4490 2298 Star
4518 2286 Star
4546 2268 Star
4573 2261 Star
4601 2221 Star
4628 2249 Star
4656 2195 Star
4683 2158 Star
4710 2133 Star
4738 2151 Star
4765 2064 Star
4792 2045 Star
4820 2002 Star
4847 1968 Star
4874 1886 Star
4902 1967 Star
4929 1953 Star
4956 1913 Star
4983 1910 Star
5010 1914 Star
5038 1825 Star
5065 1825 Star
5092 1722 Star
5119 1768 Star
5146 1777 Star
5173 1812 Star
5200 1768 Star
5227 1755 Star
5255 1751 Star
5282 1680 Star
5309 1660 Star
5336 1635 Star
5363 1560 Star
5390 1695 Star
5417 1607 Star
5444 1624 Star
5471 1579 Star
5498 1591 Star
5525 1470 Star
5552 1393 Star
5579 1462 Star
5606 1386 Star
5633 1338 Star
5660 1455 Star
5687 1388 Star
5714 1361 Star
5741 1436 Star
5768 1330 Star
5795 1275 Star
5822 1237 Star
5849 1341 Star
5876 1225 Star
5903 1248 Star
5930 1370 Star
5957 1151 Star
5984 1182 Star
6011 1245 Star
6038 1295 Star
6065 1122 Star
6092 1080 Star
6119 1135 Star
6146 1100 Star
6173 1007 Star
6200 850 Star
6227 1032 Star
6254 1013 Star
6281 1143 Star
6308 949 Star
6335 1098 Star
6362 911 Star
6389 800 Star
6416 856 Star
6443 983 Star
6470 863 Star
6497 812 Star
6524 784 Star
6551 753 Star
6578 913 Star
6605 646 Star
6632 889 Star
6659 585 Star
6686 880 Star
6713 776 Star
6740 808 Star
6767 739 Star
6794 697 Star
6821 771 Star
6848 724 Star
6594 4207 Star
1.000 UL
LTb
742 280 M
6220 0 V
0 4340 V
-6220 0 V
742 280 L
1.000 UP
stroke
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
