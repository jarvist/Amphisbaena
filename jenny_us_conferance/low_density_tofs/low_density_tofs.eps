%!PS-Adobe-2.0
%%Title: low_density_tofs.eps
%%Creator: gnuplot 4.1 patchlevel 0
%%CreationDate: Fri Jul 22 19:38:03 2005
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -53 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (low_density_tofs.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.1 patchlevel 0)
  /Author (,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Jul 22 19:38:03 2005)
  /DOCINFO pdfmark
end
} ifelse
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
% Default Line colors
/LCw { 1 1 1 } def
/LCb { 0 0 0 } def
/LCa { 0 0 0 } def
/LC0 { 1 0 0 } def
/LC1 { 0 1 0 } def
/LC2 { 0 0 1 } def
/LC3 { 1 0 1 } def
/LC4 { 0 1 1 } def
/LC5 { 1 1 0 } def
/LC6 { 0 0 0 } def
/LC7 { 1 0.3 0 } def
/LC8 { 0.5 0.5 0.5 } def
% Default Line Types
/LTw { PL [] 1 setgray } def
/LTb { BL [] LCb DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor } def
/LT0 { PL [] LC0 DL } def
/LT1 { PL [4 dl1 2 dl2] LC1 DL } def
/LT2 { PL [2 dl1 3 dl2] LC2 DL } def
/LT3 { PL [1 dl1 1.5 dl2] LC3 DL } def
/LT4 { PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL } def
/LT5 { PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL } def
/LT6 { PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL } def
/LT7 { PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL } def
/LT8 { PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor } def
/BoxColFill { gsave Rec PolyFill } def
/PolyFill {gsave Density  fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
%
% PostScript level 2 pattern fill definitions
% Ethan A Merritt April 2004
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
          bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc { 0.5 setlinewidth  pop 0 0 M 8 8 L 0 8 M 8 0 L stroke } 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc { 0.5 setlinewidth  pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
              0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke }
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc { 0.5 setlinewidth  pop 0 0 M 0 8 L
              8 8 L 8 0 L 0 0 L fill }
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc { 0.5 setlinewidth  pop -4 8 M 8 -4 L
              0 12 M 12 0 L stroke }
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc { 0.5 setlinewidth  pop -4 0 M 8 12 L
              0 -4 M 12 8 L stroke }
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc { 0.5 setlinewidth  pop -2 8 M 4 -4 L
              0 12 M 8 -4 L 4 12 M 10 0 L stroke }
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc { 0.5 setlinewidth  pop -2 0 M 4 12 L
              0 -4 M 8 12 L 4 -4 M 10 8 L stroke }
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc { 0.5 setlinewidth  pop 8 -2 M -4 4 L
              12 0 M -4 8 L 12 4 M 0 10 L stroke }
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc { 0.5 setlinewidth  pop 0 -2 M 12 4 L
              -4 0 M 12 8 L -4 4 M 8 10 L stroke }
>> matrix makepattern
/Pat9 exch def
/Pattern1 {KeepColor Pat1 setpattern} bind def
/Pattern2 {KeepColor Pat2 setpattern} bind def
/Pattern3 {KeepColor Pat3 setpattern} bind def
/Pattern4 {KeepColor Landscape { Pat5 } { Pat4 } ifelse setpattern} bind def
/Pattern5 {KeepColor Landscape { Pat4 } { Pat5 } ifelse setpattern} bind def
/Pattern6 {KeepColor Landscape { Pat9 } { Pat6 } ifelse setpattern} bind def
/Pattern7 {KeepColor Landscape { Pat8 } { Pat7 } ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 160 scalefont setfont
1.000 UL
LTb
1008 502 M
63 0 V
5857 0 R
-63 0 V
stroke
912 502 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 160.0 0.0 true true 0 ( 10)]
] -53.3 MRshow
Blacktext { grestore } if
1.000 UL
LTb
1008 853 M
31 0 V
5889 0 R
-31 0 V
1008 1318 M
31 0 V
5889 0 R
-31 0 V
1008 1557 M
31 0 V
5889 0 R
-31 0 V
1008 1670 M
63 0 V
5857 0 R
-63 0 V
stroke
912 1670 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 160.0 0.0 true true 0 ( 100)]
] -53.3 MRshow
Blacktext { grestore } if
1.000 UL
LTb
1008 2021 M
31 0 V
5889 0 R
-31 0 V
1008 2486 M
31 0 V
5889 0 R
-31 0 V
1008 2725 M
31 0 V
5889 0 R
-31 0 V
1008 2838 M
63 0 V
5857 0 R
-63 0 V
stroke
912 2838 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 160.0 0.0 true true 0 ( 1000)]
] -53.3 MRshow
Blacktext { grestore } if
1.000 UL
LTb
1008 3189 M
31 0 V
5889 0 R
-31 0 V
1008 3654 M
31 0 V
5889 0 R
-31 0 V
1008 3893 M
31 0 V
5889 0 R
-31 0 V
1008 4006 M
63 0 V
5857 0 R
-63 0 V
stroke
912 4006 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 160.0 0.0 true true 0 ( 10000)]
] -53.3 MRshow
Blacktext { grestore } if
1.000 UL
LTb
1008 4358 M
31 0 V
5889 0 R
-31 0 V
1008 4822 M
31 0 V
5889 0 R
-31 0 V
1773 480 M
0 31 V
0 4337 R
0 -31 V
2245 480 M
0 31 V
0 4337 R
0 -31 V
2579 480 M
0 31 V
0 4337 R
0 -31 V
2839 480 M
0 31 V
0 4337 R
0 -31 V
3051 480 M
0 31 V
0 4337 R
0 -31 V
3230 480 M
0 31 V
0 4337 R
0 -31 V
3385 480 M
0 31 V
0 4337 R
0 -31 V
3522 480 M
0 31 V
0 4337 R
0 -31 V
3645 480 M
0 63 V
0 4305 R
0 -63 V
stroke
3645 320 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 160.0 0.0 true true 0 ( 10)]
] -53.3 MCshow
Blacktext { grestore } if
1.000 UL
LTb
4451 480 M
0 31 V
0 4337 R
0 -31 V
4922 480 M
0 31 V
0 4337 R
0 -31 V
5256 480 M
0 31 V
0 4337 R
0 -31 V
5516 480 M
0 31 V
0 4337 R
0 -31 V
5728 480 M
0 31 V
0 4337 R
0 -31 V
5907 480 M
0 31 V
0 4337 R
0 -31 V
6062 480 M
0 31 V
0 4337 R
0 -31 V
6199 480 M
0 31 V
0 4337 R
0 -31 V
6322 480 M
0 63 V
0 4305 R
0 -63 V
stroke
6322 320 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 160.0 0.0 true true 0 ( 100)]
] -53.3 MCshow
Blacktext { grestore } if
1.000 UL
LTb
1.000 UL
LTb
1008 480 M
5920 0 V
0 4368 V
-5920 0 V
0 -4368 V
stroke
LTb
160 2664 M
Blacktext { gsave 0 setgray } if
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 160.0 0.0 true true 0 (Current Flux)]
] -53.3 MCshow
grestore
Blacktext { grestore } if
LTb
3968 80 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 160.0 0.0 true true 0 (Time [arb. units])]
] -53.3 MCshow
Blacktext { grestore } if
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
6193 4705 M
Blacktext { gsave 0 setgray } if
("a_0.05_0.20.dat" using 2:4) Rshow
Blacktext { grestore } if
LT0
6289 4705 M
447 0 V
-5728 41 R
18 -882 V
38 -93 V
39 -286 V
39 663 V
39 -782 V
39 32 V
39 -179 V
77 810 R
78 -352 R
78 217 R
39 -254 V
38 12 V
39 -468 V
39 709 V
39 -441 V
78 416 R
38 -892 V
39 472 V
39 -13 V
39 -572 V
39 666 V
39 340 V
38 -1237 V
39 807 V
39 29 V
39 -66 V
39 -919 V
39 490 V
39 500 V
77 -25 R
39 -191 V
78 217 R
39 -443 V
38 487 V
78 -145 R
39 -67 V
39 -675 V
39 307 V
38 297 V
39 -314 V
78 232 R
39 297 V
116 -586 R
39 92 V
78 38 R
39 34 V
38 -101 V
78 -493 R
39 739 V
39 -193 V
39 -304 V
39 -411 V
38 -223 V
78 1013 R
39 -251 V
78 227 R
116 -285 R
39 -175 V
78 -1326 R
38 1311 V
78 333 R
117 29 R
116 -30 R
39 -1050 V
78 1286 R
155 -638 R
39 -215 V
39 -186 V
77 307 R
39 58 V
78 304 R
78 74 R
77 -617 R
78 -51 R
39 -267 V
116 166 R
78 479 R
117 -367 R
38 -884 V
117 1107 R
116 -505 R
78 454 R
78 -144 R
39 -823 V
194 1098 R
77 -359 R
39 -448 V
78 -574 R
116 1037 R
78 -216 R
78 -84 R
116 -222 R
39 -76 V
78 319 R
1026 3864 Pls
1064 3771 Pls
1103 3485 Pls
1142 4148 Pls
1181 3366 Pls
1220 3398 Pls
1259 3219 Pls
1336 4029 Pls
1414 3677 Pls
1492 3894 Pls
1531 3640 Pls
1569 3652 Pls
1608 3184 Pls
1647 3893 Pls
1686 3452 Pls
1764 3868 Pls
1802 2976 Pls
1841 3448 Pls
1880 3435 Pls
1919 2863 Pls
1958 3529 Pls
1997 3869 Pls
2035 2632 Pls
2074 3439 Pls
2113 3468 Pls
2152 3402 Pls
2191 2483 Pls
2230 2973 Pls
2269 3473 Pls
2346 3448 Pls
2385 3257 Pls
2463 3474 Pls
2502 3031 Pls
2540 3518 Pls
2618 3373 Pls
2657 3306 Pls
2696 2631 Pls
2735 2938 Pls
2773 3235 Pls
2812 2921 Pls
2890 3153 Pls
2929 3450 Pls
3045 2864 Pls
3084 2956 Pls
3162 2994 Pls
3201 3028 Pls
3239 2927 Pls
3317 2434 Pls
3356 3173 Pls
3395 2980 Pls
3434 2676 Pls
3473 2265 Pls
3511 2042 Pls
3589 3055 Pls
3628 2804 Pls
3706 3031 Pls
3822 2746 Pls
3861 2571 Pls
3939 1245 Pls
3977 2556 Pls
4055 2889 Pls
4172 2918 Pls
4288 2888 Pls
4327 1838 Pls
4405 3124 Pls
4560 2486 Pls
4599 2271 Pls
4638 2085 Pls
4715 2392 Pls
4754 2450 Pls
4832 2754 Pls
4910 2828 Pls
4987 2211 Pls
5065 2160 Pls
5104 1893 Pls
5220 2059 Pls
5298 2538 Pls
5415 2171 Pls
5453 1287 Pls
5570 2394 Pls
5686 1889 Pls
5764 2343 Pls
5842 2199 Pls
5881 1376 Pls
6075 2474 Pls
6152 2115 Pls
6191 1667 Pls
6269 1093 Pls
6385 2130 Pls
6463 1914 Pls
6541 1830 Pls
6657 1608 Pls
6696 1532 Pls
6774 1851 Pls
6512 4705 Pls
1.000 UP
1.000 UL
LT1
LTb
6193 4545 M
Blacktext { gsave 0 setgray } if
("r_0.05_0.20.dat" using 2:4) Rshow
Blacktext { grestore } if
LT1
6289 4545 M
447 0 V
1010 4848 M
16 -752 V
38 -259 V
39 406 V
39 -254 V
39 -140 V
39 164 V
39 -85 V
39 -161 V
38 336 V
39 -63 V
39 -260 V
39 336 V
39 -283 V
39 250 V
38 -229 V
39 182 V
39 -632 V
39 492 V
39 106 V
39 23 V
38 -259 V
39 295 V
39 -386 V
39 429 V
39 -1068 V
39 733 V
38 -154 V
39 -34 V
39 112 V
39 232 V
39 -233 V
39 376 V
39 -166 V
38 29 V
39 -332 V
39 369 V
39 -54 V
39 -70 V
39 -206 V
38 121 V
39 95 V
39 -84 V
39 81 V
39 -266 V
39 175 V
38 -29 V
39 -656 V
39 695 V
39 -31 V
39 98 V
39 -97 V
38 -184 V
39 132 V
39 -241 V
39 73 V
39 50 V
39 278 V
38 -427 V
39 -25 V
39 146 V
39 175 V
39 -237 V
39 55 V
39 -160 V
38 312 V
39 -240 V
39 26 V
39 -52 V
39 -473 V
39 721 V
38 -468 V
39 393 V
39 -325 V
39 288 V
39 56 V
39 -330 V
38 142 V
39 -325 V
39 -225 V
39 635 V
39 -280 V
39 188 V
38 -322 V
39 447 V
39 -49 V
39 -236 V
39 342 V
39 -453 V
39 327 V
38 -127 V
39 -225 V
39 194 V
39 2 V
39 -247 V
39 -190 V
38 418 V
39 -151 V
39 65 V
39 79 V
39 -175 V
39 65 V
38 7 V
stroke
4948 3189 M
39 -102 V
39 -23 V
39 17 V
39 -12 V
39 190 V
38 -165 V
39 -78 V
39 -18 V
39 173 V
39 -477 V
39 153 V
39 313 V
38 -269 V
39 147 V
39 3 V
39 -108 V
39 151 V
39 -451 V
38 105 V
39 123 V
39 -29 V
39 6 V
39 -194 V
39 162 V
38 27 V
39 -307 V
39 217 V
39 -74 V
39 -230 V
39 130 V
38 -378 V
39 290 V
39 -163 V
39 -195 V
39 342 V
39 -175 V
38 -17 V
39 -336 V
39 404 V
39 -567 V
39 317 V
39 -38 V
39 -117 V
38 -400 V
39 -14 V
39 238 V
39 -230 V
1026 4096 Crs
1064 3837 Crs
1103 4243 Crs
1142 3989 Crs
1181 3849 Crs
1220 4013 Crs
1259 3928 Crs
1298 3767 Crs
1336 4103 Crs
1375 4040 Crs
1414 3780 Crs
1453 4116 Crs
1492 3833 Crs
1531 4083 Crs
1569 3854 Crs
1608 4036 Crs
1647 3404 Crs
1686 3896 Crs
1725 4002 Crs
1764 4025 Crs
1802 3766 Crs
1841 4061 Crs
1880 3675 Crs
1919 4104 Crs
1958 3036 Crs
1997 3769 Crs
2035 3615 Crs
2074 3581 Crs
2113 3693 Crs
2152 3925 Crs
2191 3692 Crs
2230 4068 Crs
2269 3902 Crs
2307 3931 Crs
2346 3599 Crs
2385 3968 Crs
2424 3914 Crs
2463 3844 Crs
2502 3638 Crs
2540 3759 Crs
2579 3854 Crs
2618 3770 Crs
2657 3851 Crs
2696 3585 Crs
2735 3760 Crs
2773 3731 Crs
2812 3075 Crs
2851 3770 Crs
2890 3739 Crs
2929 3837 Crs
2968 3740 Crs
3006 3556 Crs
3045 3688 Crs
3084 3447 Crs
3123 3520 Crs
3162 3570 Crs
3201 3848 Crs
3239 3421 Crs
3278 3396 Crs
3317 3542 Crs
3356 3717 Crs
3395 3480 Crs
3434 3535 Crs
3473 3375 Crs
3511 3687 Crs
3550 3447 Crs
3589 3473 Crs
3628 3421 Crs
3667 2948 Crs
3706 3669 Crs
3744 3201 Crs
3783 3594 Crs
3822 3269 Crs
3861 3557 Crs
3900 3613 Crs
3939 3283 Crs
3977 3425 Crs
4016 3100 Crs
4055 2875 Crs
4094 3510 Crs
4133 3230 Crs
4172 3418 Crs
4210 3096 Crs
4249 3543 Crs
4288 3494 Crs
4327 3258 Crs
4366 3600 Crs
4405 3147 Crs
4444 3474 Crs
4482 3347 Crs
4521 3122 Crs
4560 3316 Crs
4599 3318 Crs
4638 3071 Crs
4677 2881 Crs
4715 3299 Crs
4754 3148 Crs
4793 3213 Crs
4832 3292 Crs
4871 3117 Crs
4910 3182 Crs
4948 3189 Crs
4987 3087 Crs
5026 3064 Crs
5065 3081 Crs
5104 3069 Crs
5143 3259 Crs
5181 3094 Crs
5220 3016 Crs
5259 2998 Crs
5298 3171 Crs
5337 2694 Crs
5376 2847 Crs
5415 3160 Crs
5453 2891 Crs
5492 3038 Crs
5531 3041 Crs
5570 2933 Crs
5609 3084 Crs
5648 2633 Crs
5686 2738 Crs
5725 2861 Crs
5764 2832 Crs
5803 2838 Crs
5842 2644 Crs
5881 2806 Crs
5919 2833 Crs
5958 2526 Crs
5997 2743 Crs
6036 2669 Crs
6075 2439 Crs
6114 2569 Crs
6152 2191 Crs
6191 2481 Crs
6230 2318 Crs
6269 2123 Crs
6308 2465 Crs
6347 2290 Crs
6385 2273 Crs
6424 1937 Crs
6463 2341 Crs
6502 1774 Crs
6541 2091 Crs
6580 2053 Crs
6619 1936 Crs
6657 1536 Crs
6696 1522 Crs
6735 1760 Crs
6774 1530 Crs
6512 4545 Crs
1.000 UL
LTb
1008 480 M
5920 0 V
0 4368 V
-5920 0 V
0 -4368 V
1.000 UP
stroke
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
