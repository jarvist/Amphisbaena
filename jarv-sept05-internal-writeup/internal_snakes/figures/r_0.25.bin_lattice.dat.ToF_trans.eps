%!PS-Adobe-2.0
%%Title: tmp.eps
%%Creator: gnuplot 4.1 patchlevel 0
%%CreationDate: Wed Aug 24 13:29:16 2005
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (tmp.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.1 patchlevel 0)
  /Author (,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Aug 24 13:29:16 2005)
  /DOCINFO pdfmark
end
} ifelse
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
% Default Line colors
/LCw { 1 1 1 } def
/LCb { 0 0 0 } def
/LCa { 0 0 0 } def
/LC0 { 1 0 0 } def
/LC1 { 0 1 0 } def
/LC2 { 0 0 1 } def
/LC3 { 1 0 1 } def
/LC4 { 0 1 1 } def
/LC5 { 1 1 0 } def
/LC6 { 0 0 0 } def
/LC7 { 1 0.3 0 } def
/LC8 { 0.5 0.5 0.5 } def
% Default Line Types
/LTw { PL [] 1 setgray } def
/LTb { BL [] LCb DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor } def
/LT0 { PL [] LC0 DL } def
/LT1 { PL [4 dl1 2 dl2] LC1 DL } def
/LT2 { PL [2 dl1 3 dl2] LC2 DL } def
/LT3 { PL [1 dl1 1.5 dl2] LC3 DL } def
/LT4 { PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL } def
/LT5 { PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL } def
/LT6 { PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL } def
/LT7 { PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL } def
/LT8 { PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor } def
/BoxColFill { gsave Rec PolyFill } def
/PolyFill {gsave Density  fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
%
% PostScript level 2 pattern fill definitions
% Ethan A Merritt April 2004
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
          bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc { 0.5 setlinewidth  pop 0 0 M 8 8 L 0 8 M 8 0 L stroke } 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc { 0.5 setlinewidth  pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
              0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke }
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc { 0.5 setlinewidth  pop 0 0 M 0 8 L
              8 8 L 8 0 L 0 0 L fill }
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc { 0.5 setlinewidth  pop -4 8 M 8 -4 L
              0 12 M 12 0 L stroke }
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc { 0.5 setlinewidth  pop -4 0 M 8 12 L
              0 -4 M 12 8 L stroke }
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc { 0.5 setlinewidth  pop -2 8 M 4 -4 L
              0 12 M 8 -4 L 4 12 M 10 0 L stroke }
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc { 0.5 setlinewidth  pop -2 0 M 4 12 L
              0 -4 M 8 12 L 4 -4 M 10 8 L stroke }
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc { 0.5 setlinewidth  pop 8 -2 M -4 4 L
              12 0 M -4 8 L 12 4 M 0 10 L stroke }
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc { 0.5 setlinewidth  pop 0 -2 M 12 4 L
              -4 0 M 12 8 L -4 4 M 8 10 L stroke }
>> matrix makepattern
/Pat9 exch def
/Pattern1 {KeepColor Pat1 setpattern} bind def
/Pattern2 {KeepColor Pat2 setpattern} bind def
/Pattern3 {KeepColor Pat3 setpattern} bind def
/Pattern4 {KeepColor Landscape { Pat5 } { Pat4 } ifelse setpattern} bind def
/Pattern5 {KeepColor Landscape { Pat4 } { Pat5 } ifelse setpattern} bind def
/Pattern6 {KeepColor Landscape { Pat9 } { Pat6 } ifelse setpattern} bind def
/Pattern7 {KeepColor Landscape { Pat8 } { Pat7 } ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
742 280 M
63 0 V
6157 0 R
-63 0 V
stroke
658 280 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 1e-05)]
] -46.7 MRshow
Blacktext { grestore } if
1.000 UL
LTb
742 498 M
31 0 V
6189 0 R
-31 0 V
742 786 M
31 0 V
6189 0 R
-31 0 V
742 933 M
31 0 V
6189 0 R
-31 0 V
742 1003 M
63 0 V
6157 0 R
-63 0 V
stroke
658 1003 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 1e-04)]
] -46.7 MRshow
Blacktext { grestore } if
1.000 UL
LTb
742 1221 M
31 0 V
6189 0 R
-31 0 V
742 1509 M
31 0 V
6189 0 R
-31 0 V
742 1657 M
31 0 V
6189 0 R
-31 0 V
742 1727 M
63 0 V
6157 0 R
-63 0 V
stroke
658 1727 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.001)]
] -46.7 MRshow
Blacktext { grestore } if
1.000 UL
LTb
742 1944 M
31 0 V
6189 0 R
-31 0 V
742 2232 M
31 0 V
6189 0 R
-31 0 V
742 2380 M
31 0 V
6189 0 R
-31 0 V
742 2450 M
63 0 V
6157 0 R
-63 0 V
stroke
658 2450 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.01)]
] -46.7 MRshow
Blacktext { grestore } if
1.000 UL
LTb
742 2668 M
31 0 V
6189 0 R
-31 0 V
742 2956 M
31 0 V
6189 0 R
-31 0 V
742 3103 M
31 0 V
6189 0 R
-31 0 V
742 3173 M
63 0 V
6157 0 R
-63 0 V
stroke
658 3173 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.1)]
] -46.7 MRshow
Blacktext { grestore } if
1.000 UL
LTb
742 3391 M
31 0 V
6189 0 R
-31 0 V
742 3679 M
31 0 V
6189 0 R
-31 0 V
742 3827 M
31 0 V
6189 0 R
-31 0 V
742 3897 M
63 0 V
6157 0 R
-63 0 V
stroke
658 3897 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
Blacktext { grestore } if
1.000 UL
LTb
742 4114 M
31 0 V
6189 0 R
-31 0 V
742 4402 M
31 0 V
6189 0 R
-31 0 V
742 4550 M
31 0 V
6189 0 R
-31 0 V
742 4620 M
63 0 V
6157 0 R
-63 0 V
stroke
658 4620 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MRshow
Blacktext { grestore } if
1.000 UL
LTb
742 280 M
0 63 V
0 4277 R
0 -63 V
stroke
742 140 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.01)]
] -46.7 MCshow
Blacktext { grestore } if
1.000 UL
LTb
1054 280 M
0 31 V
0 4309 R
0 -31 V
1467 280 M
0 31 V
0 4309 R
0 -31 V
1678 280 M
0 31 V
0 4309 R
0 -31 V
1779 280 M
0 63 V
0 4277 R
0 -63 V
stroke
1779 140 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.1)]
] -46.7 MCshow
Blacktext { grestore } if
1.000 UL
LTb
2091 280 M
0 31 V
0 4309 R
0 -31 V
2503 280 M
0 31 V
0 4309 R
0 -31 V
2715 280 M
0 31 V
0 4309 R
0 -31 V
2815 280 M
0 63 V
0 4277 R
0 -63 V
stroke
2815 140 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MCshow
Blacktext { grestore } if
1.000 UL
LTb
3127 280 M
0 31 V
0 4309 R
0 -31 V
3540 280 M
0 31 V
0 4309 R
0 -31 V
3752 280 M
0 31 V
0 4309 R
0 -31 V
3852 280 M
0 63 V
0 4277 R
0 -63 V
stroke
3852 140 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MCshow
Blacktext { grestore } if
1.000 UL
LTb
4164 280 M
0 31 V
0 4309 R
0 -31 V
4577 280 M
0 31 V
0 4309 R
0 -31 V
4788 280 M
0 31 V
0 4309 R
0 -31 V
4889 280 M
0 63 V
0 4277 R
0 -63 V
stroke
4889 140 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MCshow
Blacktext { grestore } if
1.000 UL
LTb
5201 280 M
0 31 V
0 4309 R
0 -31 V
5613 280 M
0 31 V
0 4309 R
0 -31 V
5825 280 M
0 31 V
0 4309 R
0 -31 V
5925 280 M
0 63 V
0 4277 R
0 -63 V
stroke
5925 140 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 1000)]
] -46.7 MCshow
Blacktext { grestore } if
1.000 UL
LTb
6237 280 M
0 31 V
0 4309 R
0 -31 V
6650 280 M
0 31 V
0 4309 R
0 -31 V
6862 280 M
0 31 V
0 4309 R
0 -31 V
6962 280 M
0 63 V
0 4277 R
0 -63 V
stroke
6962 140 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 10000)]
] -46.7 MCshow
Blacktext { grestore } if
1.000 UL
LTb
1.000 UL
LTb
742 280 M
6220 0 V
0 4340 V
-6220 0 V
742 280 L
stroke
LTb
3852 4830 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 (Datafile: r)]
[(Helvetica) 112.0 -42.0 true true 0 (0)]
[(Helvetica) 140.0 0.0 true true 0 (.25.bin)]
[(Helvetica) 112.0 -42.0 true true 0 (l)]
[(Helvetica) 140.0 0.0 true true 0 (attice.dat.ToF)]
] -32.7 MCshow
Blacktext { grestore } if
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
6311 4487 M
Blacktext { gsave 0 setgray } if
("0.01.dat" using 2:3) Rshow
Blacktext { grestore } if
LT0
6395 4487 M
399 0 V
1243 3837 M
1751 2776 L
244 236 V
165 -171 V
127 -233 V
105 266 V
89 -139 V
79 -37 V
71 159 V
65 28 V
60 -5 V
56 -21 V
52 -33 V
50 -55 V
48 48 V
45 83 V
44 -14 V
42 -82 V
41 -3 V
40 31 V
38 -79 V
38 108 V
37 8 V
36 -124 V
35 86 V
35 -21 V
34 20 V
34 -60 V
33 33 V
33 59 V
32 -68 V
32 -39 V
32 34 V
31 36 V
31 21 V
31 -62 V
30 -5 V
31 7 V
30 42 V
29 -34 V
30 20 V
30 42 V
29 -83 V
29 -20 V
29 66 V
29 -79 V
29 72 V
29 -34 V
28 51 V
29 -37 V
28 -8 V
28 7 V
29 -43 V
28 22 V
28 20 V
28 -23 V
28 10 V
28 -20 V
28 13 V
27 7 V
28 10 V
28 -12 V
27 4 V
28 34 V
28 -21 V
27 6 V
28 -15 V
27 24 V
28 -23 V
27 -4 V
27 13 V
28 -15 V
27 3 V
27 -3 V
28 -5 V
27 13 V
27 -4 V
28 -29 V
27 34 V
27 -32 V
27 -12 V
27 35 V
28 1 V
27 -9 V
27 17 V
27 -9 V
27 4 V
27 6 V
27 -2 V
27 -3 V
28 -6 V
27 -3 V
27 5 V
27 6 V
27 -9 V
27 8 V
27 4 V
27 -16 V
27 3 V
27 0 V
27 2 V
27 -5 V
27 0 V
stroke
5579 2774 M
27 5 V
27 3 V
27 -1 V
27 -3 V
27 -1 V
27 20 V
27 -21 V
27 1 V
27 6 V
27 -6 V
27 -5 V
27 -5 V
27 6 V
27 -5 V
27 -1 V
27 11 V
27 0 V
27 -3 V
27 5 V
27 -2 V
27 -1 V
27 -13 V
27 -28 V
27 -69 V
27 -145 V
27 -211 V
27 -327 V
27 -444 V
27 -724 V
27 -479 V
0 -57 V
1243 3837 Pls
1751 2776 Pls
1995 3012 Pls
2160 2841 Pls
2287 2608 Pls
2392 2874 Pls
2481 2735 Pls
2560 2698 Pls
2631 2857 Pls
2696 2885 Pls
2756 2880 Pls
2812 2859 Pls
2864 2826 Pls
2914 2771 Pls
2962 2819 Pls
3007 2902 Pls
3051 2888 Pls
3093 2806 Pls
3134 2803 Pls
3174 2834 Pls
3212 2755 Pls
3250 2863 Pls
3287 2871 Pls
3323 2747 Pls
3358 2833 Pls
3393 2812 Pls
3427 2832 Pls
3461 2772 Pls
3494 2805 Pls
3527 2864 Pls
3559 2796 Pls
3591 2757 Pls
3623 2791 Pls
3654 2827 Pls
3685 2848 Pls
3716 2786 Pls
3746 2781 Pls
3777 2788 Pls
3807 2830 Pls
3836 2796 Pls
3866 2816 Pls
3896 2858 Pls
3925 2775 Pls
3954 2755 Pls
3983 2821 Pls
4012 2742 Pls
4041 2814 Pls
4070 2780 Pls
4098 2831 Pls
4127 2794 Pls
4155 2786 Pls
4183 2793 Pls
4212 2750 Pls
4240 2772 Pls
4268 2792 Pls
4296 2769 Pls
4324 2779 Pls
4352 2759 Pls
4380 2772 Pls
4407 2779 Pls
4435 2789 Pls
4463 2777 Pls
4490 2781 Pls
4518 2815 Pls
4546 2794 Pls
4573 2800 Pls
4601 2785 Pls
4628 2809 Pls
4656 2786 Pls
4683 2782 Pls
4710 2795 Pls
4738 2780 Pls
4765 2783 Pls
4792 2780 Pls
4820 2775 Pls
4847 2788 Pls
4874 2784 Pls
4902 2755 Pls
4929 2789 Pls
4956 2757 Pls
4983 2745 Pls
5010 2780 Pls
5038 2781 Pls
5065 2772 Pls
5092 2789 Pls
5119 2780 Pls
5146 2784 Pls
5173 2790 Pls
5200 2788 Pls
5227 2785 Pls
5255 2779 Pls
5282 2776 Pls
5309 2781 Pls
5336 2787 Pls
5363 2778 Pls
5390 2786 Pls
5417 2790 Pls
5444 2774 Pls
5471 2777 Pls
5498 2777 Pls
5525 2779 Pls
5552 2774 Pls
5579 2774 Pls
5606 2779 Pls
5633 2782 Pls
5660 2781 Pls
5687 2778 Pls
5714 2777 Pls
5741 2797 Pls
5768 2776 Pls
5795 2777 Pls
5822 2783 Pls
5849 2777 Pls
5876 2772 Pls
5903 2767 Pls
5930 2773 Pls
5957 2768 Pls
5984 2767 Pls
6011 2778 Pls
6038 2778 Pls
6065 2775 Pls
6092 2780 Pls
6119 2778 Pls
6146 2777 Pls
6173 2764 Pls
6200 2736 Pls
6227 2667 Pls
6254 2522 Pls
6281 2311 Pls
6308 1984 Pls
6335 1540 Pls
6362 816 Pls
6389 337 Pls
6594 4487 Pls
1.000 UP
1.000 UL
LT1
LTb
6311 4347 M
Blacktext { gsave 0 setgray } if
("0.05.dat" using 2:3) Rshow
Blacktext { grestore } if
LT1
6395 4347 M
399 0 V
1243 4277 M
508 -973 V
244 11 V
165 -92 V
127 23 V
105 41 V
89 -3 V
79 -15 V
71 -7 V
65 0 V
60 15 V
56 -25 V
52 7 V
50 -15 V
48 7 V
45 -14 V
44 -7 V
42 -14 V
41 34 V
40 -45 V
38 8 V
38 -1 V
37 22 V
36 12 V
35 -49 V
35 35 V
34 -45 V
34 24 V
33 -5 V
33 -6 V
32 5 V
32 -24 V
32 -6 V
31 -7 V
31 -9 V
31 14 V
30 14 V
31 -8 V
30 -11 V
29 7 V
30 7 V
30 -8 V
29 6 V
29 -12 V
29 12 V
29 -20 V
29 -32 V
29 20 V
28 -6 V
29 5 V
28 3 V
28 6 V
29 -4 V
28 -14 V
28 -4 V
28 -4 V
28 -11 V
28 13 V
28 -22 V
27 19 V
28 -4 V
28 -9 V
27 3 V
28 -5 V
28 4 V
27 -3 V
28 5 V
27 0 V
28 -4 V
27 -3 V
27 5 V
28 -6 V
27 -1 V
27 0 V
28 -8 V
27 20 V
27 -5 V
28 0 V
27 -7 V
27 -14 V
27 13 V
27 0 V
28 -8 V
27 2 V
27 -5 V
27 -15 V
27 17 V
27 -10 V
27 -1 V
27 8 V
28 -8 V
27 -9 V
27 -7 V
27 -13 V
27 -3 V
27 5 V
27 4 V
27 -3 V
27 -5 V
27 -2 V
27 1 V
27 3 V
27 -10 V
stroke
5579 3051 M
27 8 V
27 -8 V
27 -16 V
27 -17 V
27 -48 V
27 -50 V
27 -64 V
27 -82 V
27 -73 V
27 -87 V
27 -90 V
27 -98 V
27 -109 V
27 -73 V
27 -21 V
27 -74 V
27 -53 V
27 -34 V
27 -127 V
27 6 V
27 -66 V
27 -89 V
27 -42 V
27 -58 V
27 -22 V
27 -20 V
27 -50 V
27 -71 V
27 -168 V
27 -26 V
27 116 V
27 -154 V
27 -413 V
27 122 V
27 -269 V
27 408 V
27 -53 V
27 -95 V
27 3 V
27 -271 V
27 29 V
27 14 V
27 336 V
27 -2 V
27 -445 V
27 458 V
27 -727 V
1243 4277 Crs
1751 3304 Crs
1995 3315 Crs
2160 3223 Crs
2287 3246 Crs
2392 3287 Crs
2481 3284 Crs
2560 3269 Crs
2631 3262 Crs
2696 3262 Crs
2756 3277 Crs
2812 3252 Crs
2864 3259 Crs
2914 3244 Crs
2962 3251 Crs
3007 3237 Crs
3051 3230 Crs
3093 3216 Crs
3134 3250 Crs
3174 3205 Crs
3212 3213 Crs
3250 3212 Crs
3287 3234 Crs
3323 3246 Crs
3358 3197 Crs
3393 3232 Crs
3427 3187 Crs
3461 3211 Crs
3494 3206 Crs
3527 3200 Crs
3559 3205 Crs
3591 3181 Crs
3623 3175 Crs
3654 3168 Crs
3685 3159 Crs
3716 3173 Crs
3746 3187 Crs
3777 3179 Crs
3807 3168 Crs
3836 3175 Crs
3866 3182 Crs
3896 3174 Crs
3925 3180 Crs
3954 3168 Crs
3983 3180 Crs
4012 3160 Crs
4041 3128 Crs
4070 3148 Crs
4098 3142 Crs
4127 3147 Crs
4155 3150 Crs
4183 3156 Crs
4212 3152 Crs
4240 3138 Crs
4268 3134 Crs
4296 3130 Crs
4324 3119 Crs
4352 3132 Crs
4380 3110 Crs
4407 3129 Crs
4435 3125 Crs
4463 3116 Crs
4490 3119 Crs
4518 3114 Crs
4546 3118 Crs
4573 3115 Crs
4601 3120 Crs
4628 3120 Crs
4656 3116 Crs
4683 3113 Crs
4710 3118 Crs
4738 3112 Crs
4765 3111 Crs
4792 3111 Crs
4820 3103 Crs
4847 3123 Crs
4874 3118 Crs
4902 3118 Crs
4929 3111 Crs
4956 3097 Crs
4983 3110 Crs
5010 3110 Crs
5038 3102 Crs
5065 3104 Crs
5092 3099 Crs
5119 3084 Crs
5146 3101 Crs
5173 3091 Crs
5200 3090 Crs
5227 3098 Crs
5255 3090 Crs
5282 3081 Crs
5309 3074 Crs
5336 3061 Crs
5363 3058 Crs
5390 3063 Crs
5417 3067 Crs
5444 3064 Crs
5471 3059 Crs
5498 3057 Crs
5525 3058 Crs
5552 3061 Crs
5579 3051 Crs
5606 3059 Crs
5633 3051 Crs
5660 3035 Crs
5687 3018 Crs
5714 2970 Crs
5741 2920 Crs
5768 2856 Crs
5795 2774 Crs
5822 2701 Crs
5849 2614 Crs
5876 2524 Crs
5903 2426 Crs
5930 2317 Crs
5957 2244 Crs
5984 2223 Crs
6011 2149 Crs
6038 2096 Crs
6065 2062 Crs
6092 1935 Crs
6119 1941 Crs
6146 1875 Crs
6173 1786 Crs
6200 1744 Crs
6227 1686 Crs
6254 1664 Crs
6281 1644 Crs
6308 1594 Crs
6335 1523 Crs
6362 1355 Crs
6389 1329 Crs
6416 1445 Crs
6443 1291 Crs
6470 878 Crs
6497 1000 Crs
6524 731 Crs
6551 1139 Crs
6578 1086 Crs
6605 991 Crs
6632 994 Crs
6659 723 Crs
6686 752 Crs
6713 766 Crs
6740 1102 Crs
6767 1100 Crs
6794 655 Crs
6821 1113 Crs
6848 386 Crs
6594 4347 Crs
1.000 UP
1.000 UL
LT2
LTb
6311 4207 M
Blacktext { gsave 0 setgray } if
("0.1.dat" using 2:3) Rshow
Blacktext { grestore } if
LT2
6395 4207 M
399 0 V
1243 4450 M
508 -985 V
244 13 V
165 -40 V
127 47 V
105 -65 V
89 5 V
79 -12 V
71 -18 V
65 14 V
60 -7 V
56 28 V
52 -34 V
50 -28 V
48 -5 V
45 -1 V
44 12 V
42 -24 V
41 8 V
40 6 V
38 30 V
38 -32 V
37 31 V
36 -30 V
35 -13 V
35 -17 V
34 11 V
34 -1 V
33 -15 V
33 15 V
32 -31 V
32 -3 V
32 -25 V
31 15 V
31 11 V
31 -30 V
30 4 V
31 9 V
30 -13 V
29 10 V
30 -42 V
30 24 V
29 7 V
29 -6 V
29 -13 V
29 7 V
29 4 V
29 -14 V
28 6 V
29 -4 V
28 -4 V
28 -20 V
29 4 V
28 -8 V
28 10 V
28 -14 V
28 6 V
28 -30 V
28 -1 V
27 20 V
28 -16 V
28 -11 V
27 -1 V
28 5 V
28 -6 V
27 -1 V
28 -15 V
27 5 V
28 -3 V
27 -9 V
27 -15 V
28 -7 V
27 4 V
27 -25 V
28 -7 V
27 21 V
27 -14 V
28 -4 V
27 1 V
27 -8 V
27 -12 V
27 -8 V
28 -21 V
27 -8 V
27 3 V
27 -22 V
27 11 V
27 0 V
27 -24 V
27 3 V
28 -6 V
27 7 V
27 -9 V
27 -9 V
27 -21 V
27 -4 V
27 -20 V
27 -4 V
27 1 V
27 -20 V
27 4 V
27 -36 V
27 -20 V
stroke
5579 2901 M
27 -36 V
27 -25 V
27 -26 V
27 -13 V
27 -37 V
27 -25 V
27 -60 V
27 -46 V
27 -39 V
27 -34 V
27 -38 V
27 -66 V
27 -30 V
27 -31 V
27 -25 V
27 -79 V
27 -21 V
27 -26 V
27 28 V
27 -53 V
27 -150 V
27 2 V
27 -1 V
27 -61 V
27 40 V
27 -73 V
27 -74 V
27 -58 V
27 6 V
27 37 V
27 -17 V
27 -203 V
27 47 V
27 -15 V
27 5 V
27 33 V
27 -61 V
27 -47 V
27 29 V
27 -113 V
27 9 V
27 61 V
27 -57 V
27 -117 V
27 -37 V
27 -154 V
27 27 V
1243 4450 Star
1751 3465 Star
1995 3478 Star
2160 3438 Star
2287 3485 Star
2392 3420 Star
2481 3425 Star
2560 3413 Star
2631 3395 Star
2696 3409 Star
2756 3402 Star
2812 3430 Star
2864 3396 Star
2914 3368 Star
2962 3363 Star
3007 3362 Star
3051 3374 Star
3093 3350 Star
3134 3358 Star
3174 3364 Star
3212 3394 Star
3250 3362 Star
3287 3393 Star
3323 3363 Star
3358 3350 Star
3393 3333 Star
3427 3344 Star
3461 3343 Star
3494 3328 Star
3527 3343 Star
3559 3312 Star
3591 3309 Star
3623 3284 Star
3654 3299 Star
3685 3310 Star
3716 3280 Star
3746 3284 Star
3777 3293 Star
3807 3280 Star
3836 3290 Star
3866 3248 Star
3896 3272 Star
3925 3279 Star
3954 3273 Star
3983 3260 Star
4012 3267 Star
4041 3271 Star
4070 3257 Star
4098 3263 Star
4127 3259 Star
4155 3255 Star
4183 3235 Star
4212 3239 Star
4240 3231 Star
4268 3241 Star
4296 3227 Star
4324 3233 Star
4352 3203 Star
4380 3202 Star
4407 3222 Star
4435 3206 Star
4463 3195 Star
4490 3194 Star
4518 3199 Star
4546 3193 Star
4573 3192 Star
4601 3177 Star
4628 3182 Star
4656 3179 Star
4683 3170 Star
4710 3155 Star
4738 3148 Star
4765 3152 Star
4792 3127 Star
4820 3120 Star
4847 3141 Star
4874 3127 Star
4902 3123 Star
4929 3124 Star
4956 3116 Star
4983 3104 Star
5010 3096 Star
5038 3075 Star
5065 3067 Star
5092 3070 Star
5119 3048 Star
5146 3059 Star
5173 3059 Star
5200 3035 Star
5227 3038 Star
5255 3032 Star
5282 3039 Star
5309 3030 Star
5336 3021 Star
5363 3000 Star
5390 2996 Star
5417 2976 Star
5444 2972 Star
5471 2973 Star
5498 2953 Star
5525 2957 Star
5552 2921 Star
5579 2901 Star
5606 2865 Star
5633 2840 Star
5660 2814 Star
5687 2801 Star
5714 2764 Star
5741 2739 Star
5768 2679 Star
5795 2633 Star
5822 2594 Star
5849 2560 Star
5876 2522 Star
5903 2456 Star
5930 2426 Star
5957 2395 Star
5984 2370 Star
6011 2291 Star
6038 2270 Star
6065 2244 Star
6092 2272 Star
6119 2219 Star
6146 2069 Star
6173 2071 Star
6200 2070 Star
6227 2009 Star
6254 2049 Star
6281 1976 Star
6308 1902 Star
6335 1844 Star
6362 1850 Star
6389 1887 Star
6416 1870 Star
6443 1667 Star
6470 1714 Star
6497 1699 Star
6524 1704 Star
6551 1737 Star
6578 1676 Star
6605 1629 Star
6632 1658 Star
6659 1545 Star
6686 1554 Star
6713 1615 Star
6740 1558 Star
6767 1441 Star
6794 1404 Star
6821 1250 Star
6848 1277 Star
6594 4207 Star
1.000 UL
LTb
742 280 M
6220 0 V
0 4340 V
-6220 0 V
742 280 L
1.000 UP
stroke
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
