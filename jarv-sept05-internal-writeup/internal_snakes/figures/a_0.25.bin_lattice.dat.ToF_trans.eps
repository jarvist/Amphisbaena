%!PS-Adobe-2.0
%%Title: tmp.eps
%%Creator: gnuplot 4.1 patchlevel 0
%%CreationDate: Wed Aug 24 13:29:16 2005
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (tmp.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.1 patchlevel 0)
  /Author (,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Aug 24 13:29:16 2005)
  /DOCINFO pdfmark
end
} ifelse
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
% Default Line colors
/LCw { 1 1 1 } def
/LCb { 0 0 0 } def
/LCa { 0 0 0 } def
/LC0 { 1 0 0 } def
/LC1 { 0 1 0 } def
/LC2 { 0 0 1 } def
/LC3 { 1 0 1 } def
/LC4 { 0 1 1 } def
/LC5 { 1 1 0 } def
/LC6 { 0 0 0 } def
/LC7 { 1 0.3 0 } def
/LC8 { 0.5 0.5 0.5 } def
% Default Line Types
/LTw { PL [] 1 setgray } def
/LTb { BL [] LCb DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor } def
/LT0 { PL [] LC0 DL } def
/LT1 { PL [4 dl1 2 dl2] LC1 DL } def
/LT2 { PL [2 dl1 3 dl2] LC2 DL } def
/LT3 { PL [1 dl1 1.5 dl2] LC3 DL } def
/LT4 { PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL } def
/LT5 { PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL } def
/LT6 { PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL } def
/LT7 { PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL } def
/LT8 { PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor } def
/BoxColFill { gsave Rec PolyFill } def
/PolyFill {gsave Density  fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
%
% PostScript level 2 pattern fill definitions
% Ethan A Merritt April 2004
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
          bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc { 0.5 setlinewidth  pop 0 0 M 8 8 L 0 8 M 8 0 L stroke } 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc { 0.5 setlinewidth  pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
              0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke }
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc { 0.5 setlinewidth  pop 0 0 M 0 8 L
              8 8 L 8 0 L 0 0 L fill }
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc { 0.5 setlinewidth  pop -4 8 M 8 -4 L
              0 12 M 12 0 L stroke }
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc { 0.5 setlinewidth  pop -4 0 M 8 12 L
              0 -4 M 12 8 L stroke }
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc { 0.5 setlinewidth  pop -2 8 M 4 -4 L
              0 12 M 8 -4 L 4 12 M 10 0 L stroke }
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc { 0.5 setlinewidth  pop -2 0 M 4 12 L
              0 -4 M 8 12 L 4 -4 M 10 8 L stroke }
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc { 0.5 setlinewidth  pop 8 -2 M -4 4 L
              12 0 M -4 8 L 12 4 M 0 10 L stroke }
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc { 0.5 setlinewidth  pop 0 -2 M 12 4 L
              -4 0 M 12 8 L -4 4 M 8 10 L stroke }
>> matrix makepattern
/Pat9 exch def
/Pattern1 {KeepColor Pat1 setpattern} bind def
/Pattern2 {KeepColor Pat2 setpattern} bind def
/Pattern3 {KeepColor Pat3 setpattern} bind def
/Pattern4 {KeepColor Landscape { Pat5 } { Pat4 } ifelse setpattern} bind def
/Pattern5 {KeepColor Landscape { Pat4 } { Pat5 } ifelse setpattern} bind def
/Pattern6 {KeepColor Landscape { Pat9 } { Pat6 } ifelse setpattern} bind def
/Pattern7 {KeepColor Landscape { Pat8 } { Pat7 } ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
742 280 M
63 0 V
6157 0 R
-63 0 V
stroke
658 280 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 1e-06)]
] -46.7 MRshow
Blacktext { grestore } if
1.000 UL
LTb
742 467 M
31 0 V
6189 0 R
-31 0 V
742 713 M
31 0 V
6189 0 R
-31 0 V
742 840 M
31 0 V
6189 0 R
-31 0 V
742 900 M
63 0 V
6157 0 R
-63 0 V
stroke
658 900 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 1e-05)]
] -46.7 MRshow
Blacktext { grestore } if
1.000 UL
LTb
742 1087 M
31 0 V
6189 0 R
-31 0 V
742 1333 M
31 0 V
6189 0 R
-31 0 V
742 1460 M
31 0 V
6189 0 R
-31 0 V
742 1520 M
63 0 V
6157 0 R
-63 0 V
stroke
658 1520 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 1e-04)]
] -46.7 MRshow
Blacktext { grestore } if
1.000 UL
LTb
742 1707 M
31 0 V
6189 0 R
-31 0 V
742 1953 M
31 0 V
6189 0 R
-31 0 V
742 2080 M
31 0 V
6189 0 R
-31 0 V
742 2140 M
63 0 V
6157 0 R
-63 0 V
stroke
658 2140 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.001)]
] -46.7 MRshow
Blacktext { grestore } if
1.000 UL
LTb
742 2327 M
31 0 V
6189 0 R
-31 0 V
742 2573 M
31 0 V
6189 0 R
-31 0 V
742 2700 M
31 0 V
6189 0 R
-31 0 V
742 2760 M
63 0 V
6157 0 R
-63 0 V
stroke
658 2760 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.01)]
] -46.7 MRshow
Blacktext { grestore } if
1.000 UL
LTb
742 2947 M
31 0 V
6189 0 R
-31 0 V
742 3193 M
31 0 V
6189 0 R
-31 0 V
742 3320 M
31 0 V
6189 0 R
-31 0 V
742 3380 M
63 0 V
6157 0 R
-63 0 V
stroke
658 3380 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.1)]
] -46.7 MRshow
Blacktext { grestore } if
1.000 UL
LTb
742 3567 M
31 0 V
6189 0 R
-31 0 V
742 3813 M
31 0 V
6189 0 R
-31 0 V
742 3940 M
31 0 V
6189 0 R
-31 0 V
742 4000 M
63 0 V
6157 0 R
-63 0 V
stroke
658 4000 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
Blacktext { grestore } if
1.000 UL
LTb
742 4187 M
31 0 V
6189 0 R
-31 0 V
742 4433 M
31 0 V
6189 0 R
-31 0 V
742 4560 M
31 0 V
6189 0 R
-31 0 V
742 4620 M
63 0 V
6157 0 R
-63 0 V
stroke
658 4620 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MRshow
Blacktext { grestore } if
1.000 UL
LTb
742 280 M
0 63 V
0 4277 R
0 -63 V
stroke
742 140 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.01)]
] -46.7 MCshow
Blacktext { grestore } if
1.000 UL
LTb
1054 280 M
0 31 V
0 4309 R
0 -31 V
1467 280 M
0 31 V
0 4309 R
0 -31 V
1678 280 M
0 31 V
0 4309 R
0 -31 V
1779 280 M
0 63 V
0 4277 R
0 -63 V
stroke
1779 140 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.1)]
] -46.7 MCshow
Blacktext { grestore } if
1.000 UL
LTb
2091 280 M
0 31 V
0 4309 R
0 -31 V
2503 280 M
0 31 V
0 4309 R
0 -31 V
2715 280 M
0 31 V
0 4309 R
0 -31 V
2815 280 M
0 63 V
0 4277 R
0 -63 V
stroke
2815 140 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MCshow
Blacktext { grestore } if
1.000 UL
LTb
3127 280 M
0 31 V
0 4309 R
0 -31 V
3540 280 M
0 31 V
0 4309 R
0 -31 V
3752 280 M
0 31 V
0 4309 R
0 -31 V
3852 280 M
0 63 V
0 4277 R
0 -63 V
stroke
3852 140 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MCshow
Blacktext { grestore } if
1.000 UL
LTb
4164 280 M
0 31 V
0 4309 R
0 -31 V
4577 280 M
0 31 V
0 4309 R
0 -31 V
4788 280 M
0 31 V
0 4309 R
0 -31 V
4889 280 M
0 63 V
0 4277 R
0 -63 V
stroke
4889 140 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MCshow
Blacktext { grestore } if
1.000 UL
LTb
5201 280 M
0 31 V
0 4309 R
0 -31 V
5613 280 M
0 31 V
0 4309 R
0 -31 V
5825 280 M
0 31 V
0 4309 R
0 -31 V
5925 280 M
0 63 V
0 4277 R
0 -63 V
stroke
5925 140 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 1000)]
] -46.7 MCshow
Blacktext { grestore } if
1.000 UL
LTb
6237 280 M
0 31 V
0 4309 R
0 -31 V
6650 280 M
0 31 V
0 4309 R
0 -31 V
6862 280 M
0 31 V
0 4309 R
0 -31 V
6962 280 M
0 63 V
0 4277 R
0 -63 V
stroke
6962 140 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 ( 10000)]
] -46.7 MCshow
Blacktext { grestore } if
1.000 UL
LTb
1.000 UL
LTb
742 280 M
6220 0 V
0 4340 V
-6220 0 V
742 280 L
stroke
LTb
3852 4830 M
Blacktext { gsave 0 setgray } if
[ [(Helvetica) 140.0 0.0 true true 0 (Datafile: a)]
[(Helvetica) 112.0 -42.0 true true 0 (0)]
[(Helvetica) 140.0 0.0 true true 0 (.25.bin)]
[(Helvetica) 112.0 -42.0 true true 0 (l)]
[(Helvetica) 140.0 0.0 true true 0 (attice.dat.ToF)]
] -32.7 MCshow
Blacktext { grestore } if
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
6311 4487 M
Blacktext { gsave 0 setgray } if
("0.01.dat" using 2:3) Rshow
Blacktext { grestore } if
LT0
6395 4487 M
399 0 V
1243 4194 M
508 -788 V
244 -170 V
165 50 V
127 40 V
105 -33 V
89 30 V
79 15 V
71 -203 V
65 31 V
60 62 V
56 58 V
52 -76 V
50 -7 V
48 110 V
45 -206 V
44 186 V
42 -33 V
41 -137 V
40 145 V
38 -121 V
38 -21 V
37 73 V
36 -12 V
35 50 V
35 -57 V
34 -59 V
34 20 V
33 36 V
33 -88 V
32 66 V
32 6 V
32 47 V
31 -28 V
31 -86 V
31 69 V
30 -31 V
31 -57 V
30 86 V
29 -88 V
30 -42 V
30 61 V
29 -32 V
29 -11 V
29 79 V
29 -105 V
29 8 V
29 -21 V
28 34 V
29 -14 V
28 -78 V
28 -27 V
29 80 V
28 -22 V
28 -39 V
28 17 V
28 -4 V
28 17 V
28 -37 V
27 37 V
28 -73 V
28 50 V
27 -41 V
28 33 V
28 -77 V
27 -31 V
28 43 V
27 23 V
28 -107 V
27 66 V
27 -42 V
28 28 V
27 -30 V
27 -21 V
28 25 V
27 -28 V
27 -21 V
28 13 V
27 -51 V
27 48 V
27 -56 V
27 32 V
28 -32 V
27 21 V
27 -6 V
27 -1 V
27 -33 V
27 -14 V
27 -66 V
27 58 V
28 4 V
27 -31 V
27 0 V
27 20 V
27 -12 V
27 -27 V
27 -27 V
27 -27 V
27 35 V
27 -13 V
27 -21 V
27 -25 V
27 12 V
stroke
5579 2572 M
27 -2 V
27 -52 V
27 -13 V
27 -44 V
27 -6 V
27 17 V
27 26 V
27 -26 V
27 8 V
27 -30 V
27 1 V
27 -40 V
27 26 V
27 -51 V
27 -45 V
27 17 V
27 -20 V
27 -15 V
27 -26 V
27 23 V
27 -29 V
27 -11 V
27 -36 V
27 19 V
27 -107 V
27 4 V
27 61 V
27 -87 V
27 2 V
27 -12 V
27 -79 V
27 105 V
27 -43 V
27 23 V
27 -28 V
27 -18 V
27 -40 V
27 32 V
27 -49 V
27 10 V
27 -24 V
27 1 V
27 -46 V
27 4 V
27 -43 V
27 17 V
27 -10 V
1243 4194 Pls
1751 3406 Pls
1995 3236 Pls
2160 3286 Pls
2287 3326 Pls
2392 3293 Pls
2481 3323 Pls
2560 3338 Pls
2631 3135 Pls
2696 3166 Pls
2756 3228 Pls
2812 3286 Pls
2864 3210 Pls
2914 3203 Pls
2962 3313 Pls
3007 3107 Pls
3051 3293 Pls
3093 3260 Pls
3134 3123 Pls
3174 3268 Pls
3212 3147 Pls
3250 3126 Pls
3287 3199 Pls
3323 3187 Pls
3358 3237 Pls
3393 3180 Pls
3427 3121 Pls
3461 3141 Pls
3494 3177 Pls
3527 3089 Pls
3559 3155 Pls
3591 3161 Pls
3623 3208 Pls
3654 3180 Pls
3685 3094 Pls
3716 3163 Pls
3746 3132 Pls
3777 3075 Pls
3807 3161 Pls
3836 3073 Pls
3866 3031 Pls
3896 3092 Pls
3925 3060 Pls
3954 3049 Pls
3983 3128 Pls
4012 3023 Pls
4041 3031 Pls
4070 3010 Pls
4098 3044 Pls
4127 3030 Pls
4155 2952 Pls
4183 2925 Pls
4212 3005 Pls
4240 2983 Pls
4268 2944 Pls
4296 2961 Pls
4324 2957 Pls
4352 2974 Pls
4380 2937 Pls
4407 2974 Pls
4435 2901 Pls
4463 2951 Pls
4490 2910 Pls
4518 2943 Pls
4546 2866 Pls
4573 2835 Pls
4601 2878 Pls
4628 2901 Pls
4656 2794 Pls
4683 2860 Pls
4710 2818 Pls
4738 2846 Pls
4765 2816 Pls
4792 2795 Pls
4820 2820 Pls
4847 2792 Pls
4874 2771 Pls
4902 2784 Pls
4929 2733 Pls
4956 2781 Pls
4983 2725 Pls
5010 2757 Pls
5038 2725 Pls
5065 2746 Pls
5092 2740 Pls
5119 2739 Pls
5146 2706 Pls
5173 2692 Pls
5200 2626 Pls
5227 2684 Pls
5255 2688 Pls
5282 2657 Pls
5309 2657 Pls
5336 2677 Pls
5363 2665 Pls
5390 2638 Pls
5417 2611 Pls
5444 2584 Pls
5471 2619 Pls
5498 2606 Pls
5525 2585 Pls
5552 2560 Pls
5579 2572 Pls
5606 2570 Pls
5633 2518 Pls
5660 2505 Pls
5687 2461 Pls
5714 2455 Pls
5741 2472 Pls
5768 2498 Pls
5795 2472 Pls
5822 2480 Pls
5849 2450 Pls
5876 2451 Pls
5903 2411 Pls
5930 2437 Pls
5957 2386 Pls
5984 2341 Pls
6011 2358 Pls
6038 2338 Pls
6065 2323 Pls
6092 2297 Pls
6119 2320 Pls
6146 2291 Pls
6173 2280 Pls
6200 2244 Pls
6227 2263 Pls
6254 2156 Pls
6281 2160 Pls
6308 2221 Pls
6335 2134 Pls
6362 2136 Pls
6389 2124 Pls
6416 2045 Pls
6443 2150 Pls
6470 2107 Pls
6497 2130 Pls
6524 2102 Pls
6551 2084 Pls
6578 2044 Pls
6605 2076 Pls
6632 2027 Pls
6659 2037 Pls
6686 2013 Pls
6713 2014 Pls
6740 1968 Pls
6767 1972 Pls
6794 1929 Pls
6821 1946 Pls
6848 1936 Pls
6594 4487 Pls
1.000 UP
1.000 UL
LT1
LTb
6311 4347 M
Blacktext { gsave 0 setgray } if
("0.05.dat" using 2:3) Rshow
Blacktext { grestore } if
LT1
6395 4347 M
399 0 V
1243 4529 M
508 -946 V
244 -27 V
165 -8 V
127 0 V
105 -7 V
89 -36 V
79 -3 V
71 -64 V
65 -1 V
60 47 V
56 -40 V
52 20 V
50 -36 V
48 5 V
45 19 V
44 -27 V
42 -14 V
41 3 V
40 3 V
38 -25 V
38 -37 V
37 -6 V
36 -56 V
35 20 V
35 -14 V
34 -54 V
34 41 V
33 -13 V
33 -33 V
32 17 V
32 -76 V
32 24 V
31 -54 V
31 15 V
31 17 V
30 -12 V
31 -25 V
30 -78 V
29 -80 V
30 32 V
30 -20 V
29 -43 V
29 26 V
29 -22 V
29 -72 V
29 95 V
29 -108 V
28 -9 V
29 -9 V
28 -54 V
28 54 V
29 -44 V
28 -76 V
28 -19 V
28 50 V
28 -64 V
28 -30 V
28 70 V
27 -86 V
28 -43 V
28 5 V
27 -70 V
28 -69 V
28 -55 V
27 -39 V
28 119 V
27 -103 V
28 -250 V
27 365 V
27 -201 V
28 -156 V
27 170 V
27 -24 V
28 -162 V
27 178 V
27 -127 V
28 -6 V
27 -79 V
27 -162 V
27 147 V
27 -8 V
28 48 V
27 -63 V
27 114 V
27 -297 V
27 223 V
27 55 V
27 -122 V
27 26 V
28 8 V
27 -109 V
27 3 V
27 67 V
27 -88 V
27 -16 V
27 -74 V
27 146 V
27 -133 V
27 20 V
27 -116 V
27 10 V
27 46 V
stroke
5579 1837 M
27 -67 V
27 3 V
27 49 V
27 -352 V
27 217 V
27 16 V
27 -12 V
27 43 V
27 52 V
27 -96 V
27 52 V
27 -151 V
27 -53 V
27 24 V
27 -62 V
27 82 V
27 -182 V
27 95 V
27 81 V
27 -254 V
27 170 V
27 3 V
27 -38 V
27 -205 V
27 92 V
27 247 V
27 -258 V
27 120 V
27 -53 V
27 -4 V
27 16 V
27 41 V
27 -14 V
27 0 V
27 -128 V
27 43 V
27 -26 V
27 36 V
27 -53 V
27 67 V
27 -73 V
27 -128 V
27 19 V
27 -72 V
27 81 V
27 -28 V
27 -77 V
1243 4529 Crs
1751 3583 Crs
1995 3556 Crs
2160 3548 Crs
2287 3548 Crs
2392 3541 Crs
2481 3505 Crs
2560 3502 Crs
2631 3438 Crs
2696 3437 Crs
2756 3484 Crs
2812 3444 Crs
2864 3464 Crs
2914 3428 Crs
2962 3433 Crs
3007 3452 Crs
3051 3425 Crs
3093 3411 Crs
3134 3414 Crs
3174 3417 Crs
3212 3392 Crs
3250 3355 Crs
3287 3349 Crs
3323 3293 Crs
3358 3313 Crs
3393 3299 Crs
3427 3245 Crs
3461 3286 Crs
3494 3273 Crs
3527 3240 Crs
3559 3257 Crs
3591 3181 Crs
3623 3205 Crs
3654 3151 Crs
3685 3166 Crs
3716 3183 Crs
3746 3171 Crs
3777 3146 Crs
3807 3068 Crs
3836 2988 Crs
3866 3020 Crs
3896 3000 Crs
3925 2957 Crs
3954 2983 Crs
3983 2961 Crs
4012 2889 Crs
4041 2984 Crs
4070 2876 Crs
4098 2867 Crs
4127 2858 Crs
4155 2804 Crs
4183 2858 Crs
4212 2814 Crs
4240 2738 Crs
4268 2719 Crs
4296 2769 Crs
4324 2705 Crs
4352 2675 Crs
4380 2745 Crs
4407 2659 Crs
4435 2616 Crs
4463 2621 Crs
4490 2551 Crs
4518 2482 Crs
4546 2427 Crs
4573 2388 Crs
4601 2507 Crs
4628 2404 Crs
4656 2154 Crs
4683 2519 Crs
4710 2318 Crs
4738 2162 Crs
4765 2332 Crs
4792 2308 Crs
4820 2146 Crs
4847 2324 Crs
4874 2197 Crs
4902 2191 Crs
4929 2112 Crs
4956 1950 Crs
4983 2097 Crs
5010 2089 Crs
5038 2137 Crs
5065 2074 Crs
5092 2188 Crs
5119 1891 Crs
5146 2114 Crs
5173 2169 Crs
5200 2047 Crs
5227 2073 Crs
5255 2081 Crs
5282 1972 Crs
5309 1975 Crs
5336 2042 Crs
5363 1954 Crs
5390 1938 Crs
5417 1864 Crs
5444 2010 Crs
5471 1877 Crs
5498 1897 Crs
5525 1781 Crs
5552 1791 Crs
5579 1837 Crs
5606 1770 Crs
5633 1773 Crs
5660 1822 Crs
5687 1470 Crs
5714 1687 Crs
5741 1703 Crs
5768 1691 Crs
5795 1734 Crs
5822 1786 Crs
5849 1690 Crs
5876 1742 Crs
5903 1591 Crs
5930 1538 Crs
5957 1562 Crs
5984 1500 Crs
6011 1582 Crs
6038 1400 Crs
6065 1495 Crs
6092 1576 Crs
6119 1322 Crs
6146 1492 Crs
6173 1495 Crs
6200 1457 Crs
6227 1252 Crs
6254 1344 Crs
6281 1591 Crs
6308 1333 Crs
6335 1453 Crs
6362 1400 Crs
6389 1396 Crs
6416 1412 Crs
6443 1453 Crs
6470 1439 Crs
6497 1439 Crs
6524 1311 Crs
6551 1354 Crs
6578 1328 Crs
6605 1364 Crs
6632 1311 Crs
6659 1378 Crs
6686 1305 Crs
6713 1177 Crs
6740 1196 Crs
6767 1124 Crs
6794 1205 Crs
6821 1177 Crs
6848 1100 Crs
6594 4347 Crs
1.000 UP
1.000 UL
LT2
LTb
6311 4207 M
Blacktext { gsave 0 setgray } if
("0.1.dat" using 2:3) Rshow
Blacktext { grestore } if
LT2
6395 4207 M
399 0 V
1243 4595 M
508 -993 V
244 -29 V
165 -14 V
127 -53 V
105 43 V
89 -18 V
79 -29 V
71 6 V
65 -29 V
60 -12 V
56 -34 V
52 15 V
50 -32 V
48 1 V
45 -5 V
44 -29 V
42 -29 V
41 -60 V
40 10 V
38 17 V
38 -51 V
37 -17 V
36 80 V
35 -70 V
35 -8 V
34 -80 V
34 -78 V
33 50 V
33 -19 V
32 6 V
32 -49 V
32 -28 V
31 -2 V
31 -22 V
31 0 V
30 -20 V
31 -57 V
30 42 V
29 -43 V
30 -17 V
30 -47 V
29 -51 V
29 17 V
29 -46 V
29 95 V
29 -200 V
29 54 V
28 14 V
29 48 V
28 -110 V
28 -52 V
29 59 V
28 -84 V
28 1 V
28 39 V
28 -167 V
28 83 V
28 -2 V
27 -133 V
28 99 V
28 -5 V
27 -68 V
28 -34 V
28 -101 V
27 -37 V
28 12 V
27 68 V
28 -53 V
27 -137 V
27 13 V
28 -10 V
27 65 V
27 -58 V
28 26 V
27 -110 V
27 7 V
28 -47 V
27 -55 V
27 -288 V
27 285 V
27 116 V
28 -220 V
27 11 V
27 90 V
27 110 V
27 -105 V
27 -164 V
27 24 V
27 107 V
28 -1 V
27 -184 V
27 141 V
27 -121 V
27 26 V
27 -242 V
27 91 V
27 102 V
27 3 V
27 -149 V
27 -294 V
27 365 V
27 -41 V
stroke
5579 1693 M
27 -265 V
27 -55 V
27 230 V
27 -34 V
27 38 V
27 -362 V
27 222 V
27 -139 V
27 213 V
27 -16 V
27 21 V
27 9 V
27 -95 V
27 -143 V
27 310 V
27 -431 V
27 191 V
27 -107 V
27 -156 V
27 263 V
27 52 V
27 -272 V
27 78 V
27 -145 V
27 228 V
27 -141 V
27 0 V
27 -114 V
27 186 V
27 -159 V
27 113 V
27 73 V
27 -337 V
27 198 V
27 66 V
27 -140 V
27 114 V
27 -238 V
27 163 V
27 -272 V
27 169 V
27 -296 V
27 258 V
27 -45 V
27 -459 V
27 504 V
27 -167 V
1243 4595 Star
1751 3602 Star
1995 3573 Star
2160 3559 Star
2287 3506 Star
2392 3549 Star
2481 3531 Star
2560 3502 Star
2631 3508 Star
2696 3479 Star
2756 3467 Star
2812 3433 Star
2864 3448 Star
2914 3416 Star
2962 3417 Star
3007 3412 Star
3051 3383 Star
3093 3354 Star
3134 3294 Star
3174 3304 Star
3212 3321 Star
3250 3270 Star
3287 3253 Star
3323 3333 Star
3358 3263 Star
3393 3255 Star
3427 3175 Star
3461 3097 Star
3494 3147 Star
3527 3128 Star
3559 3134 Star
3591 3085 Star
3623 3057 Star
3654 3055 Star
3685 3033 Star
3716 3033 Star
3746 3013 Star
3777 2956 Star
3807 2998 Star
3836 2955 Star
3866 2938 Star
3896 2891 Star
3925 2840 Star
3954 2857 Star
3983 2811 Star
4012 2906 Star
4041 2706 Star
4070 2760 Star
4098 2774 Star
4127 2822 Star
4155 2712 Star
4183 2660 Star
4212 2719 Star
4240 2635 Star
4268 2636 Star
4296 2675 Star
4324 2508 Star
4352 2591 Star
4380 2589 Star
4407 2456 Star
4435 2555 Star
4463 2550 Star
4490 2482 Star
4518 2448 Star
4546 2347 Star
4573 2310 Star
4601 2322 Star
4628 2390 Star
4656 2337 Star
4683 2200 Star
4710 2213 Star
4738 2203 Star
4765 2268 Star
4792 2210 Star
4820 2236 Star
4847 2126 Star
4874 2133 Star
4902 2086 Star
4929 2031 Star
4956 1743 Star
4983 2028 Star
5010 2144 Star
5038 1924 Star
5065 1935 Star
5092 2025 Star
5119 2135 Star
5146 2030 Star
5173 1866 Star
5200 1890 Star
5227 1997 Star
5255 1996 Star
5282 1812 Star
5309 1953 Star
5336 1832 Star
5363 1858 Star
5390 1616 Star
5417 1707 Star
5444 1809 Star
5471 1812 Star
5498 1663 Star
5525 1369 Star
5552 1734 Star
5579 1693 Star
5606 1428 Star
5633 1373 Star
5660 1603 Star
5687 1569 Star
5714 1607 Star
5741 1245 Star
5768 1467 Star
5795 1328 Star
5822 1541 Star
5849 1525 Star
5876 1546 Star
5903 1555 Star
5930 1460 Star
5957 1317 Star
5984 1627 Star
6011 1196 Star
6038 1387 Star
6065 1280 Star
6092 1124 Star
6119 1387 Star
6146 1439 Star
6173 1167 Star
6200 1245 Star
6227 1100 Star
6254 1328 Star
6281 1187 Star
6308 1187 Star
6335 1073 Star
6362 1259 Star
6389 1100 Star
6416 1213 Star
6443 1286 Star
6470 949 Star
6497 1147 Star
6524 1213 Star
6551 1073 Star
6578 1187 Star
6605 949 Star
6632 1112 Star
6659 840 Star
6686 1009 Star
6713 713 Star
6740 971 Star
6767 926 Star
6794 467 Star
6821 971 Star
6848 804 Star
6594 4207 Star
1.000 UL
LTb
742 280 M
6220 0 V
0 4340 V
-6220 0 V
742 280 L
1.000 UP
stroke
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
